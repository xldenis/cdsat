<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Eprover" version="2.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg">
<path name=".."/><path name="resolve_conflict.mlcfg"/>
<theory name="Cdsat_Concrete_Impl0_ResolveConflict">
 <goal name="resolve_conflict&#39;vc" expl="VC for resolve_conflict">
 <transf name="split_vc" >
  <goal name="resolve_conflict&#39;vc.0" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="0.04" steps="276112"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="48"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="58"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="73"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="293488"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="120"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="82"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="294270"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="390"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.7" expl="assertion">
  <proof prover="2"><result status="timeout" time="1.00" steps="148612"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <proof prover="5"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.8" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.8.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.76" steps="12226"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.9" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="78"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.10" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.60" steps="9610"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.11" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.27" steps="4469"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="101"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="343985"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.36" steps="4972"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.15" expl="loop invariant init">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="125591"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.16" expl="loop invariant init">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.70" steps="220558"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.17" expl="loop invariant init">
  </goal>
  <goal name="resolve_conflict&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="395521"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.19" expl="loop invariant init">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="146396"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.20" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.20.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.52" steps="7454"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.21" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="112"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.22" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="307"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.23" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.08" steps="377"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.23.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.06" steps="376"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.24" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.22" steps="63706"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.25" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.22" steps="53216"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.26" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="43646"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.27" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.27.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="resolve_conflict&#39;vc.27.0.0" expl="assertion" proved="true">
    <proof prover="5"><result status="valid" time="0.13" steps="1640"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.27.0.1" expl="assertion" proved="true">
    <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="2.27" steps="294948"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.28" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="348431"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.29" expl="assertion">
  <proof prover="5" obsolete="true"><result status="timeout" time="1.10"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.30" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="873"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.31" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="199004"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.32" expl="assertion">
  <proof prover="5" obsolete="true"><result status="timeout" time="1.36"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.33" expl="assertion">
  <transf name="assert" arg1="(to_int (trailindex_1 ix_61) = 0)">
   <goal name="resolve_conflict&#39;vc.27.0" expl="asserted formula">
   <proof prover="5"><result status="valid" time="0.05" steps="214"/></proof>
   </goal>
   <goal name="resolve_conflict&#39;vc.27.1" expl="assertion">
   <transf name="assert" arg1="(rem_level_66 = trailindex_0 _73 || rem_level_66 = 0)">
    <goal name="resolve_conflict&#39;vc.27.1.0" expl="asserted formula">
    <proof prover="2"><result status="valid" time="0.17" steps="49867"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.27.1.1" expl="assertion">
    <transf name="case" arg1="(rem_level_66 = 0)">
     <goal name="resolve_conflict&#39;vc.27.1.1.0" expl="true case (assertion)">
     <proof prover="5"><result status="valid" time="0.05" steps="227"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.27.1.1.1" expl="false case (assertion)">
     <transf name="assert" arg1="(le_log _73 ix_61)">
      <goal name="resolve_conflict&#39;vc.27.1.1.1.0" expl="asserted formula">
      <proof prover="2"><result status="valid" time="0.31" steps="66825"/></proof>
      </goal>
      <goal name="resolve_conflict&#39;vc.27.1.1.1.1" expl="false case (assertion)">
      <proof prover="2"><result status="valid" time="0.92" steps="157770"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.34" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="26209"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.35" expl="assertion">
  <transf name="split_vc" >
   <goal name="resolve_conflict&#39;vc.35.0" expl="assertion" proved="true">
   <proof prover="5" timelimit="5" memlimit="2000"><result status="valid" time="0.04" steps="144"/></proof>
   </goal>
   <goal name="resolve_conflict&#39;vc.35.1" expl="assertion">
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.36" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="285"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.37" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="164"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.38" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="408"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.39" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="332"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.40" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="172"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.41" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.22" steps="49001"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.42" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="173"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.43" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.35" steps="4418"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.44" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="176"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.45" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="321"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.46" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.36" steps="71075"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.47" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="323"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.48" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="182"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.49" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.09" steps="1071"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.50" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="360"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.51" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="196"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.52" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="367"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.53" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="417754"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.54" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.13" steps="1257"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.55" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.11" steps="1360"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.56" expl="assertion" proved="true">
  <transf name="clear_but" proved="true" arg1="H">
   <goal name="resolve_conflict&#39;vc.56.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="resolve_conflict&#39;vc.56.0.0" expl="assertion" proved="true">
    <proof prover="5"><result status="valid" time="0.01" steps="117"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.57" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.10" steps="485"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.58" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="434662"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.59" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="39007"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.60" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.11" steps="2205"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.61" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="433066"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.62" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="158"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.63" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="159"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.64" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="160"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.65" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.09" steps="1076"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.66" expl="assertion">
  <proof prover="5" obsolete="true"><result status="timeout" time="1.06"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.67" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="26499"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="170"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.68" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="26501"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="170"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.69" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="26545"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="178"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.70" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="411745"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="336"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.71" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="52626"/></proof>
  <proof prover="3"><result status="valid" time="0.05" steps="414441"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.72" expl="assertion">
  <transf name="assert" arg1="(exists i. 0 &lt;= i &lt; length1 (inner produced_172) &amp;&amp; index_logic ( * trail_2) (get1 produced_172 i) = t)">
   <goal name="resolve_conflict&#39;vc.66.0" expl="asserted formula">
   <transf name="instantiate" arg1="abstract_justification_spec" arg2="( * trail_2),(shallow_model18 just_155)">
    <goal name="resolve_conflict&#39;vc.66.0.0" expl="asserted formula">
    <transf name="destruct_rec" arg1="Hinst">
     <goal name="resolve_conflict&#39;vc.66.0.0.0" expl="destruct premise">
     <proof prover="5"><result status="valid" time="0.07" steps="342"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.66.0.0.1" expl="asserted formula">
     <transf name="instantiate" arg1="Hinst2" arg2="t">
      <goal name="resolve_conflict&#39;vc.66.0.0.1.0" expl="asserted formula">
      <transf name="destruct_rec" arg1="Hinst">
       <goal name="resolve_conflict&#39;vc.66.0.0.1.0.0" expl="destruct premise">
       <proof prover="5"><result status="valid" time="0.05" steps="192"/></proof>
       </goal>
       <goal name="resolve_conflict&#39;vc.66.0.0.1.0.1" expl="asserted formula">
       <transf name="unfold" arg1="contains2" arg2="in" arg3="Hinst1">
        <goal name="resolve_conflict&#39;vc.66.0.0.1.0.1.0" expl="asserted formula">
        <proof prover="5"><result status="valid" time="0.67" steps="7417"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.66.1" expl="assertion">
   <proof prover="5"><result status="valid" time="0.07" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.73" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="26909"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.74" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.12" steps="39706"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="351"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.75" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="230635"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="196"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.76" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.38" steps="82210"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.77" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.77.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Assert">
    <goal name="resolve_conflict&#39;vc.77.0.0" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="0.07" steps="386"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.77.0.1" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="0.05" steps="205"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.77.0.2" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="0.05" steps="205"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.78" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="53121"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.79" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.34" steps="4161"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.80" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="27026"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="209"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.81" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="27059"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="217"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.82" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="419273"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="364"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.83" expl="loop invariant init">
  <proof prover="2" obsolete="true"><result status="timeout" time="2.00" steps="238444"/></proof>
  <proof prover="3" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.84" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.22" steps="610415"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.85" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="221"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.86" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="395"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.87" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="234607"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="233"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.88" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="431671"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.89" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="155403"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147054"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5"><result status="valid" time="0.07" steps="442"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.90" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.30" steps="3821"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.91" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="426831"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="406"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.92" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.41" steps="87216"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.93" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="481353"/></proof>
  <proof prover="5"><result status="valid" time="0.32" steps="4194"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.94" expl="loop invariant preservation">
  </goal>
  <goal name="resolve_conflict&#39;vc.95" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.09" steps="416"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.96" expl="loop invariant preservation">
  </goal>
  <goal name="resolve_conflict&#39;vc.97" expl="loop invariant preservation" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.97.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="resolve_conflict&#39;vc.97.0.0" expl="VC for resolve_conflict" proved="true">
    <proof prover="3"><result status="valid" time="0.11" steps="458929"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.97.0.1" expl="VC for resolve_conflict" proved="true">
    <proof prover="5"><result status="valid" time="0.09" steps="428"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.98" expl="loop invariant preservation">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="157961"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.34"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139990"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.99" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.99.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.29" steps="1145372"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.100" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.100.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.23" steps="871594"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.101" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="27433"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="255"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.102" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="431"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.103" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="1199"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.104" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.104.0" expl="loop invariant preservation" proved="true">
   <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
    <goal name="resolve_conflict&#39;vc.104.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="3"><result status="valid" time="0.10" steps="651476"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.104.1" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.09" steps="1201"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.105" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="441"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.106" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.17" steps="2320"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.107" expl="precondition">
  <proof prover="5" obsolete="true"><result status="timeout" time="1.06"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.108" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.108.0" expl="assertion" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="3.07" steps="3846706"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.109" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.109.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="resolve_conflict&#39;vc.109.0.0" expl="assertion" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="resolve_conflict&#39;vc.109.0.0.0" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.109.0.0.0.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="8.28" steps="11692064"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.109.0.0.1" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.109.0.0.1.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="10.20" steps="11691358"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.109.0.0.2" expl="VC for resolve_conflict" proved="true">
     <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="17.63" steps="1174916"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.110" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.110.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="resolve_conflict&#39;vc.110.0.0" expl="assertion" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="resolve_conflict&#39;vc.110.0.0.0" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.110.0.0.0.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="11.22" steps="11684681"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.110.0.0.1" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.110.0.0.1.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="9.66" steps="11684818"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.110.0.0.2" expl="VC for resolve_conflict" proved="true">
     <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="17.67" steps="1170974"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.111" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.111.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="resolve_conflict&#39;vc.111.0.0" expl="assertion" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="resolve_conflict&#39;vc.111.0.0.0" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.111.0.0.0.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="10.48" steps="11685369"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.111.0.0.1" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.111.0.0.1.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="10.36" steps="11685377"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.111.0.0.2" expl="VC for resolve_conflict" proved="true">
     <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="17.97" steps="1211697"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.112" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="71203"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.113" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="81972"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.114" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="27382"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="192"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.115" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.33" steps="70035"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.116" expl="loop invariant preservation">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158423"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="use_th" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.116.0" expl="loop invariant preservation">
   <transf name="case" arg1="(i = length1 (inner produced_172) - 1)
">
    <goal name="resolve_conflict&#39;vc.108.0.0" expl="true case (loop invariant preservation)">
    <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="460458"/></proof>
    <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
    <proof prover="5" timelimit="30" memlimit="4000"><result status="failure" time="0.00"/></proof>
    <transf name="assert" arg1="(is_decision (conflict_0 (inner abs_cflct_11)) (term_value j_185) /\
  not is_bool1 (assignmentdeepmodel_val (shallow_model j_185)))">
     <goal name="resolve_conflict&#39;vc.108.0.0.0" expl="asserted formula">
     <proof prover="2"><result status="timeout" time="1.00" steps="149826"/></proof>
     <proof prover="3"><result status="valid" time="0.13" steps="614190"/></proof>
     <proof prover="5"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.108.0.0.1" expl="true case (loop invariant preservation)">
     <proof prover="2"><result status="timeout" time="1.00" steps="151628"/></proof>
     <proof prover="3"><result status="timeout" time="1.00"/></proof>
     <proof prover="5"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" arg1="( level_of (conflict_0 (inner abs_cflct_11))
  (index_logic ( * trail_2) (get1 produced_172 i)) = level_log jix_184)">
      <goal name="resolve_conflict&#39;vc.108.0.0.1.0" expl="asserted formula">
      <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="461117"/></proof>
      <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="1.16" steps="2525013"/></proof>
      <proof prover="5" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
      </goal>
      <goal name="resolve_conflict&#39;vc.108.0.0.1.1" expl="true case (loop invariant preservation)">
      <proof prover="5"><result status="valid" time="0.08" steps="385"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="resolve_conflict&#39;vc.108.0.1" expl="false case (loop invariant preservation)">
    <proof prover="3"><result status="valid" time="0.10" steps="536323"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.117" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.12" steps="1109"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.118" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="233609"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="212"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.119" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.08" steps="517"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.120" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="425895"/></proof>
  <proof prover="5"><result status="valid" time="0.08" steps="446"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.121" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.15" steps="413995"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="230"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.122" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.17" steps="11885"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.123" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="678"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.124" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="166"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.125" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="392"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.126" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="92"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.127" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="112"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.128" expl="loop invariant preservation" proved="true">
  <proof prover="3" obsolete="true"><result status="timeout" time="1.28"/></proof>
  <proof prover="5"><result status="valid" time="0.08" steps="1056"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.129" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="406"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.130" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.37" steps="4363"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.131" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="158788"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.28" expl="assertion">
  <transf name="instantiate" arg1="ix_to_abs_level_spec" arg2="( * trail_2),(shallow_model6 heap_10)">
   <goal name="resolve_conflict&#39;vc.28.0" expl="assertion">
   <transf name="destruct_rec" arg1="Hinst">
    <goal name="resolve_conflict&#39;vc.28.0.0" expl="destruct premise">
    <proof prover="5"><result status="valid" time="0.03" steps="118"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.28.0.1" expl="destruct premise">
    <proof prover="2"><result status="valid" time="0.25" steps="65853"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.28.0.2" expl="assertion">
    <proof prover="2"><result status="valid" time="0.20" steps="53486"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.25" expl="assertion">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="160380"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl15" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl20" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.01" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl25" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl30" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl34" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl42" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl16" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl21" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl26" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl31" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl35" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl39" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl44">
 <goal name="partial_cmp_refn">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="482176"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00" steps="425174"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="smoke_detector_deep" >
  <goal name="partial_cmp_refn.0">
  <transf name="split_vc" >
   <goal name="partial_cmp_refn.0.0">
   <proof prover="0" timelimit="10" memlimit="4000" obsolete="true"><result status="unknown" time="0.03" steps="2966"/></proof>
   <proof prover="2" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="8.10" steps="4353787"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="8.43"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00" steps="400597"/></proof>
   <proof prover="5" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl45">
 <goal name="cmp_refn">
 <proof prover="0"><result status="unknown" time="0.02" steps="1587"/></proof>
 <proof prover="2"><result status="unknown" time="0.02" steps="2679"/></proof>
 <proof prover="3"><result status="unknown" time="0.01" steps="7107"/></proof>
 <proof prover="4"><result status="unknown" time="0.02" steps="2602"/></proof>
 <proof prover="5"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="cmp_refn.0">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="unknown" time="0.02" steps="1504"/></proof>
  <proof prover="2" timelimit="5" memlimit="2000"><result status="unknown" time="0.02" steps="2567"/></proof>
  <proof prover="3" timelimit="5" memlimit="2000"><result status="unknown" time="0.01" steps="6925"/></proof>
  <proof prover="5" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <transf name="inline_goal" >
   <goal name="cmp_refn.0.0">
   <transf name="split_all_full" >
    <goal name="cmp_refn.0.0.0">
    <proof prover="0" timelimit="10" memlimit="4000"><result status="unknown" time="0.05" steps="9364"/></proof>
    <proof prover="2" timelimit="10" memlimit="4000"><result status="unknown" time="0.08" steps="12042"/></proof>
    <proof prover="3" timelimit="10" memlimit="4000"><result status="timeout" time="8.13"/></proof>
    <proof prover="5" timelimit="10" memlimit="4000"><result status="timeout" time="10.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl7" proved="true">
 <goal name="cmp_le_log_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="valid" time="0.01" steps="94"/></proof>
 <proof prover="5"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="cmp_ge_log_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="cmp_gt_log_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="trans_refn" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="261"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="5"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="antisym2_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="valid" time="0.01" steps="94"/></proof>
 <proof prover="5"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="cmp_lt_log_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="eq_cmp_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="valid" time="0.01" steps="197"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="5"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="refl_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="valid" time="0.01" steps="197"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="5"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="antisym1_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
</file>
</why3session>
