<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg">
<path name=".."/><path name="resolve_conflict.mlcfg"/>
<theory name="Cdsat_Concrete_Impl0_ResolveConflict" proved="true">
 <goal name="resolve_conflict&#39;vc" expl="VC for resolve_conflict" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resolve_conflict&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="18734"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="38"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="18800"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="48"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="263062"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="50"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="93"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="56"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="220"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.6" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.6.0" expl="assertion" proved="true">
   <transf name="instantiate" proved="true" arg1="seq_to_set_spec" arg2="( * trail),(shallow_model old_conflict),(shallow_model6 heap)">
    <goal name="resolve_conflict&#39;vc.6.0.0" expl="assertion" proved="true">
    <transf name="destruct_rec" proved="true" arg1="Hinst">
     <goal name="resolve_conflict&#39;vc.6.0.0.0" expl="destruct premise" proved="true">
     <proof prover="5"><result status="valid" time="0.06" steps="357"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.6.0.0.1" expl="destruct premise" proved="true">
     <proof prover="5"><result status="valid" time="0.06" steps="328"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.6.0.0.2" expl="assertion" proved="true">
     <proof prover="5"><result status="valid" time="0.03" steps="66"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.7" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="87"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.8" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.8.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.06" steps="477"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.9" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="74"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.10" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.10.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.30" steps="4319"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.11" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.40" steps="7283"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="161"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="97"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="274"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.32" steps="1290269"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.16" expl="loop invariant init" proved="true">
  <transf name="assert" proved="true" arg1="(set_level (inner (trail_ghost ( * trail))) (ix_to_abs ( * trail) (shallow_model6 heap)) = level_log (set_max (shallow_model6 heap)))
">
   <goal name="resolve_conflict&#39;vc.16.0" expl="asserted formula" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="0.13" steps="623169"/></proof>
   </goal>
   <goal name="resolve_conflict&#39;vc.16.1" expl="loop invariant init" proved="true">
   <proof prover="5" timelimit="5"><result status="valid" time="0.37" steps="3429"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.17" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.17.0" expl="loop invariant init" proved="true">
   <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
    <goal name="resolve_conflict&#39;vc.17.0.0" expl="loop invariant init" proved="true">
    <proof prover="0"><result status="valid" time="0.76" steps="147689"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="107"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.19" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="387950"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.20" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="259"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.21" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.74" steps="6848"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.22" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="106"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.23" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="309"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.24" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.08" steps="371"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.24.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.06" steps="371"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.25" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.36" steps="61578"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.26" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="50493"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.27" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="41163"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.28" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.28.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="resolve_conflict&#39;vc.28.0.0" expl="assertion" proved="true">
    <proof prover="2" timelimit="5"><result status="valid" time="0.35" steps="61321"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.28.0.1" expl="assertion" proved="true">
    <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="2.71" steps="292677"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.29" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.30" steps="61679"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.30" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.40" steps="67345"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.31" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(to_int (trailindex_1 ix) = 0)">
   <goal name="resolve_conflict&#39;vc.31.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="0.05" steps="174"/></proof>
   </goal>
   <goal name="resolve_conflict&#39;vc.31.1" expl="assertion" proved="true">
   <transf name="case" proved="true" arg1="(rem_level = 0)">
    <goal name="resolve_conflict&#39;vc.31.1.0" expl="true case (assertion)" proved="true">
    <proof prover="5"><result status="valid" time="0.04" steps="171"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.31.1.1" expl="false case (assertion)" proved="true">
    <transf name="case" proved="true" arg1="(le_log ix2 ix)">
     <goal name="resolve_conflict&#39;vc.31.1.1.0" expl="false case (true case. assertion)" proved="true">
     <proof prover="2" timelimit="5"><result status="valid" time="1.99" steps="265814"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.31.1.1.1" expl="false case (assertion)" proved="true">
     <proof prover="2"><result status="valid" time="0.41" steps="68702"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.32" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="170"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.33" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.43" steps="71329"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.34" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="130"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.35" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(abstract_justification ( * trail) (shallow_model18 just) ==
  remove1 (conflict_1 (inner abs_cflct)) (term_value a1))">
   <goal name="resolve_conflict&#39;vc.35.0" expl="asserted formula" proved="true">
   <transf name="instantiate" proved="true" arg1="seq_to_set_spec" arg2="( * trail),(shallow_model18 just),( (shallow_model6 heap1))">
    <goal name="resolve_conflict&#39;vc.35.0.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.75" steps="116664"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.35.1" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.05" steps="192"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.36" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="136"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.37" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="272"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.38" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.11" steps="572621"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.39" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="231"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.40" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.57" steps="6156"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.41" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="144"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.42" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="219"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.43" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="68368"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.44" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="219"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.45" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="226"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.46" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(abstract_justification ( * trail1) (shallow_model18 just) == abstract_justification ( * trail) (shallow_model18 just))
">
   <goal name="resolve_conflict&#39;vc.46.0" expl="asserted formula" proved="true">
   <transf name="assert" proved="true" arg1="(forall i . contains2 (shallow_model18 just) i -&gt; index_logic1 ( * trail) i = index_logic1 ( * trail1) i)
">
    <goal name="resolve_conflict&#39;vc.46.0.0" expl="asserted formula" proved="true">
    <proof prover="5"><result status="valid" time="0.12" steps="850"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.46.0.1" expl="asserted formula" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="resolve_conflict&#39;vc.46.0.1.0" expl="asserted formula" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.46.0.1.0.0" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="(exists i . contains2 (shallow_model18 just) i &amp;&amp; x = index_logic1 ( * trail1) i)">
       <goal name="resolve_conflict&#39;vc.46.0.1.0.0.0" expl="asserted formula" proved="true">
       <proof prover="5"><result status="valid" time="0.40" steps="3589"/></proof>
       </goal>
       <goal name="resolve_conflict&#39;vc.46.0.1.0.0.1" expl="asserted formula" proved="true">
       <proof prover="5"><result status="valid" time="0.43" steps="3824"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="resolve_conflict&#39;vc.46.0.1.0.1" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="(exists i . contains2 (shallow_model18 just) i &amp;&amp; x = index_logic1 ( * trail) i)">
       <goal name="resolve_conflict&#39;vc.46.0.1.0.1.0" expl="asserted formula" proved="true">
       <proof prover="5"><result status="valid" time="0.39" steps="3648"/></proof>
       </goal>
       <goal name="resolve_conflict&#39;vc.46.0.1.0.1.1" expl="asserted formula" proved="true">
       <proof prover="5"><result status="valid" time="0.13" steps="929"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.46.1" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.07" steps="229"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.47" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="160"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.48" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="162"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.49" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="239"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.50" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="400074"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.51" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.40" steps="4137"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.52" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.38" steps="4006"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.53" expl="assertion" proved="true">
  <transf name="clear_but" proved="true" arg1="H">
   <goal name="resolve_conflict&#39;vc.53.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="resolve_conflict&#39;vc.53.0.0" expl="assertion" proved="true">
    <proof prover="5"><result status="valid" time="0.01" steps="115"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.54" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.10" steps="318"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.55" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="424798"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.56" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="37426"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.57" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.11" steps="1793"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.58" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.58.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="resolve_conflict&#39;vc.58.0.0" expl="assertion" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="resolve_conflict&#39;vc.58.0.0.0" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.58.0.0.0.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.09" steps="511777"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.58.0.0.1" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.58.0.0.1.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.09" steps="511785"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.58.0.0.2" expl="VC for resolve_conflict" proved="true">
     <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="0.54" steps="80579"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.59" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="132"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.60" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.60.0" expl="precondition" proved="true">
   <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="0.02" steps="26766"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.61" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="134"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.62" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="138"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.63" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="25588"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="138"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.64" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="25632"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="146"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.65" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="390853"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="200"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.66" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="49252"/></proof>
  <proof prover="3"><result status="valid" time="0.05" steps="389482"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.67" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(exists i. 0 &lt;= i &lt; length1 (inner produced1) &amp;&amp; index_logic1 ( * trail) (get1 produced1 i) = t)">
   <goal name="resolve_conflict&#39;vc.67.0" expl="asserted formula" proved="true">
   <transf name="instantiate" proved="true" arg1="abstract_justification_spec" arg2="( * trail),(shallow_model18 just1)">
    <goal name="resolve_conflict&#39;vc.67.0.0" expl="asserted formula" proved="true">
    <transf name="destruct_rec" proved="true" arg1="Hinst">
     <goal name="resolve_conflict&#39;vc.67.0.0.0" expl="destruct premise" proved="true">
     <proof prover="5"><result status="valid" time="0.07" steps="227"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.67.0.0.1" expl="asserted formula" proved="true">
     <transf name="instantiate" proved="true" arg1="Hinst2" arg2="t">
      <goal name="resolve_conflict&#39;vc.67.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="destruct_rec" proved="true" arg1="Hinst">
       <goal name="resolve_conflict&#39;vc.67.0.0.1.0.0" expl="destruct premise" proved="true">
       <proof prover="5"><result status="valid" time="0.05" steps="168"/></proof>
       </goal>
       <goal name="resolve_conflict&#39;vc.67.0.0.1.0.1" expl="asserted formula" proved="true">
       <transf name="unfold" proved="true" arg1="contains2" arg2="in" arg3="Hinst1">
        <goal name="resolve_conflict&#39;vc.67.0.0.1.0.1.0" expl="asserted formula" proved="true">
        <proof prover="5"><result status="valid" time="0.69" steps="7340"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     <transf name="unfold" proved="true" arg1="contains2" arg2="in" arg3="Hinst2">
      <goal name="resolve_conflict&#39;vc.67.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="instantiate" proved="true" arg1="Hinst2" arg2="t">
       <goal name="resolve_conflict&#39;vc.67.0.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="5"><result status="valid" time="0.69" steps="7831"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.67.1" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.07" steps="228"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.68" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="25725"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.69" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.12" steps="37986"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="214"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.70" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="209144"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="164"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.71" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.38" steps="78586"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.72" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.72.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Assert">
    <goal name="resolve_conflict&#39;vc.72.0.0" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="0.07" steps="237"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.72.0.1" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="0.05" steps="173"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.72.0.2" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="0.05" steps="173"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.73" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.73.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.32" steps="2964"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.74" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="25891"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="180"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.75" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="188"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.76" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="231"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.77" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.09" steps="422530"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.78" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="562119"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.79" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="212217"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="192"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.80" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="398908"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="256"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.81" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.11" steps="547473"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.82" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="206"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.83" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="400669"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="260"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.84" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.23" steps="62205"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.85" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="214098"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="209"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.86" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="210"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.87" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.09" steps="277"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.88" expl="loop invariant preservation" proved="true">
  <transf name="assert" proved="true" arg1="(ix_to_abs ( * trail) (shallow_model6 heap) ==
  conflict_1 (inner abs_cflct))">
   <goal name="resolve_conflict&#39;vc.88.0" expl="asserted formula" proved="true">
   <transf name="assert" proved="true" arg1="(forall i. contains4 (ix_to_abs ( * trail) (shallow_model6 heap)) i -&gt; contains4 (conflict_1 (inner abs_cflct)) i)
">
    <goal name="resolve_conflict&#39;vc.88.0.0" expl="asserted formula" proved="true">
    <proof prover="5"><result status="valid" time="0.29" steps="2509"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.88.0.1" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="(forall i. contains4 (conflict_1 (inner abs_cflct)) i -&gt; contains4 (ix_to_abs ( * trail) (shallow_model6 heap)) i)
">
     <goal name="resolve_conflict&#39;vc.88.0.1.0" expl="asserted formula" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.88.0.1.0.0" expl="asserted formula" proved="true">
      <transf name="case" proved="true" arg1="(contains4 (abstract_justification ( * trail) (shallow_model18 just1)) i)">
       <goal name="resolve_conflict&#39;vc.88.0.1.0.0.0" expl="true case (asserted formula)" proved="true">
       <transf name="assert" proved="true" arg1="(forall i. 0 &lt;= i &lt; length1 (shallow_model18 just1) -&gt; contains (shallow_model6 heap) (shallow_model18 just1)[i]&#39;)
">
        <goal name="resolve_conflict&#39;vc.88.0.1.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="5"><result status="valid" time="0.32" steps="2696"/></proof>
        </goal>
        <goal name="resolve_conflict&#39;vc.88.0.1.0.0.0.1" expl="true case (asserted formula)" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="resolve_conflict&#39;vc.88.0.1.0.0.0.1.0" expl="true case (asserted formula)" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="resolve_conflict&#39;vc.88.0.1.0.0.0.1.0.0" expl="true case (asserted formula)" proved="true">
          <proof prover="2" timelimit="10"><result status="valid" time="7.43" steps="738516"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="resolve_conflict&#39;vc.88.0.1.0.0.1" expl="false case (asserted formula)" proved="true">
       <proof prover="3"><result status="valid" time="0.18" steps="768325"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.88.0.1.1" expl="asserted formula" proved="true">
     <proof prover="5"><result status="valid" time="0.29" steps="2437"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.88.1" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.07" steps="279"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.89" expl="loop invariant preservation" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.89.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="resolve_conflict&#39;vc.89.0.0" expl="VC for resolve_conflict" proved="true">
    <proof prover="3"><result status="valid" time="0.11" steps="432260"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.89.0.1" expl="VC for resolve_conflict" proved="true">
    <proof prover="5"><result status="valid" time="0.09" steps="286"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.90" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.23" steps="2515"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.91" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.91.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.29" steps="1034135"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.92" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.92.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.20" steps="803922"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.93" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="224"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.94" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="294"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.95" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="693"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.96" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.96.0" expl="loop invariant preservation" proved="true">
   <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
    <goal name="resolve_conflict&#39;vc.96.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="3"><result status="valid" time="0.10" steps="613082"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.96.1" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.09" steps="699"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.97" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.08" steps="306"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.98" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.17" steps="1512"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.99" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.99.0" expl="assertion" proved="true">
   <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="1.08" steps="2705688"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.100" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="176"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.101" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.101.0" expl="assertion" proved="true">
   <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="1.96" steps="2948662"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.102" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.57" steps="88431"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.103" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="26002"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="160"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.104" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.33" steps="65910"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.105" expl="loop invariant preservation" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.105.0" expl="loop invariant preservation" proved="true">
   <transf name="case" proved="true" arg1="(i = length1 (inner produced1) - 1)">
    <goal name="resolve_conflict&#39;vc.105.0.0" expl="true case (loop invariant preservation)" proved="true">
    <transf name="assert" proved="true" arg1="(is_decision (conflict_0 (inner abs_cflct)) (term_value j) /\
  not is_bool1 (assignmentdeepmodel_val (shallow_model1 j)))">
     <goal name="resolve_conflict&#39;vc.105.0.0.0" expl="asserted formula" proved="true">
     <proof prover="3"><result status="valid" time="0.12" steps="592234"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.105.0.0.1" expl="true case (loop invariant preservation)" proved="true">
     <transf name="assert" proved="true" arg1="( level_of (conflict_0 (inner abs_cflct))
  (index_logic1 ( * trail) (get1 produced1 i)) = level_log jix)">
      <goal name="resolve_conflict&#39;vc.105.0.0.1.0" expl="asserted formula" proved="true">
      <proof prover="3"><result status="valid" time="0.10" steps="514777"/></proof>
      </goal>
      <goal name="resolve_conflict&#39;vc.105.0.0.1.1" expl="true case (loop invariant preservation)" proved="true">
      <proof prover="2"><result status="valid" time="0.46" steps="81579"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="resolve_conflict&#39;vc.105.0.1" expl="false case (loop invariant preservation)" proved="true">
    <proof prover="3"><result status="valid" time="0.10" steps="509896"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.106" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.12" steps="558"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.107" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.15" steps="384618"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="172"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.108" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.08" steps="261"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.109" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="422833"/></proof>
  <proof prover="5"><result status="valid" time="0.08" steps="757"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.110" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="386889"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="182"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.111" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.69" steps="7124"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.112" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="454"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.113" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="134"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.114" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="215"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.115" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="20352"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="80"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.116" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="83"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.117" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.10" steps="779"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.118" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="335"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.119" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.28" steps="2548"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.120" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.61" steps="133944"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.121" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="105518"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.122" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.122.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="resolve_conflict&#39;vc.122.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="resolve_conflict&#39;vc.122.0.0.0" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.122.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="0.06" steps="131"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.122.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="resolve_conflict&#39;vc.122.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="resolve_conflict&#39;vc.122.1.0.0" expl="postcondition" proved="true">
     <proof prover="3"><result status="valid" time="0.10" steps="491221"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.122.1.0.1" expl="postcondition" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.122.1.0.1.0" expl="postcondition" proved="true">
      <proof prover="3"><result status="valid" time="0.09" steps="492375"/></proof>
      </goal>
      <goal name="resolve_conflict&#39;vc.122.1.0.1.1" expl="postcondition" proved="true">
      <proof prover="5"><result status="valid" time="0.23" steps="1983"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl15" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl20" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.01" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl25" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl30" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl34" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl42" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl16" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl21" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl26" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl31" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl35" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl39" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl44">
 <goal name="partial_cmp_refn">
 <proof prover="0"><result status="timeout" time="1.00" steps="391117"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="217724"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <proof prover="5"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl45">
 <goal name="cmp_refn">
 <proof prover="0"><result status="unknown" time="0.02" steps="1587"/></proof>
 <proof prover="2"><result status="unknown" time="0.03" steps="2679"/></proof>
 <proof prover="3"><result status="unknown" time="0.01" steps="7107"/></proof>
 <proof prover="5"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl7" proved="true">
 <goal name="cmp_le_log_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="94"/></proof>
 </goal>
 <goal name="cmp_ge_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="cmp_gt_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="trans_refn" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="261"/></proof>
 </goal>
 <goal name="antisym2_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="94"/></proof>
 </goal>
 <goal name="cmp_lt_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="eq_cmp_refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="197"/></proof>
 </goal>
 <goal name="refl_refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="197"/></proof>
 </goal>
 <goal name="antisym1_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
</file>
</why3session>
