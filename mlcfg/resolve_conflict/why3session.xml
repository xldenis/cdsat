<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Eprover" version="2.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg">
<path name=".."/><path name="resolve_conflict.mlcfg"/>
<theory name="Cdsat_Concrete_Impl0_ResolveConflict">
 <goal name="resolve_conflict&#39;vc" expl="VC for resolve_conflict">
 <transf name="split_vc" >
  <goal name="resolve_conflict&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="62"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="48"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="58"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="73"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="119"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="82"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="390"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.7" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.7.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="resolve_conflict&#39;vc.7.0.0" expl="assertion" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="resolve_conflict&#39;vc.7.0.0.0" expl="assertion" proved="true">
     <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="3.84" steps="476089"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.8" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.8.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.76" steps="10244"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.9" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="78"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.10" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.83" steps="10957"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.11" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.27" steps="4136"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="99"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="335217"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.36" steps="4970"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="1.05" steps="162510"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.16" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="382887"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.17" expl="loop invariant init">
  </goal>
  <goal name="resolve_conflict&#39;vc.18" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="259"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.19" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="225"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.20" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.20.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="1.98" steps="23495"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.21" expl="assertion">
  <proof prover="2"><result status="timeout" time="1.00" steps="158230"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <proof prover="5"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.22" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="338971"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.23" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="375754"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.24" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.18" steps="1319"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.25" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="403516"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.26" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.26.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.71" steps="8104"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.27" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(to_int (trailindex_1 ix_61) = 0)">
   <goal name="resolve_conflict&#39;vc.27.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="0.05" steps="214"/></proof>
   </goal>
   <goal name="resolve_conflict&#39;vc.27.1" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="(rem_level_66 = trailindex_0 _73 || rem_level_66 = 0)">
    <goal name="resolve_conflict&#39;vc.27.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.17" steps="49867"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.27.1.1" expl="assertion" proved="true">
    <transf name="case" proved="true" arg1="(rem_level_66 = 0)">
     <goal name="resolve_conflict&#39;vc.27.1.1.0" expl="true case (assertion)" proved="true">
     <proof prover="5"><result status="valid" time="0.05" steps="227"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.27.1.1.1" expl="false case (assertion)" proved="true">
     <transf name="assert" proved="true" arg1="(le_log _73 ix_61)">
      <goal name="resolve_conflict&#39;vc.27.1.1.1.0" expl="asserted formula" proved="true">
      <proof prover="2"><result status="valid" time="0.31" steps="66825"/></proof>
      </goal>
      <goal name="resolve_conflict&#39;vc.27.1.1.1.1" expl="false case (assertion)" proved="true">
      <proof prover="2"><result status="valid" time="0.92" steps="157770"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.28" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="146"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.29" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.14" steps="1668"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.30" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="248"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.31" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="156"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.32" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="368"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.33" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="298"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.34" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="164"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.35" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="277"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.36" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="167"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.37" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.35" steps="3344"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.38" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="170"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.39" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="283"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.40" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.36" steps="68906"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.41" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="284"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.42" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="176"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.43" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.09" steps="909"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.44" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="321"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.45" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="190"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.46" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="329"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.47" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="408243"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.48" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.13" steps="1082"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.49" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.11" steps="1184"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.50" expl="assertion" proved="true">
  <transf name="clear_but" proved="true" arg1="H">
   <goal name="resolve_conflict&#39;vc.50.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="resolve_conflict&#39;vc.50.0.0" expl="assertion" proved="true">
    <proof prover="5"><result status="valid" time="0.01" steps="117"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.51" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.10" steps="440"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.52" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="422098"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.53" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="38205"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.54" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.11" steps="1836"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.55" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="421525"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.56" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="150"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.57" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="151"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.58" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="48630"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.59" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.09" steps="946"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.60" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="298"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.61" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="25969"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="162"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.62" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="25971"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="162"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.63" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="26015"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="170"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.64" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="402334"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="297"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.65" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="51749"/></proof>
  <proof prover="3"><result status="valid" time="0.05" steps="405007"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.66" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(exists i. 0 &lt;= i &lt; length1 (inner produced_172) &amp;&amp; index_logic ( * trail_2) (get1 produced_172 i) = t)">
   <goal name="resolve_conflict&#39;vc.66.0" expl="asserted formula" proved="true">
   <transf name="instantiate" proved="true" arg1="abstract_justification_spec" arg2="( * trail_2),(shallow_model18 just_155)">
    <goal name="resolve_conflict&#39;vc.66.0.0" expl="asserted formula" proved="true">
    <transf name="destruct_rec" proved="true" arg1="Hinst">
     <goal name="resolve_conflict&#39;vc.66.0.0.0" expl="destruct premise" proved="true">
     <proof prover="5"><result status="valid" time="0.07" steps="342"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.66.0.0.1" expl="asserted formula" proved="true">
     <transf name="instantiate" proved="true" arg1="Hinst2" arg2="t">
      <goal name="resolve_conflict&#39;vc.66.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="destruct_rec" proved="true" arg1="Hinst">
       <goal name="resolve_conflict&#39;vc.66.0.0.1.0.0" expl="destruct premise" proved="true">
       <proof prover="5"><result status="valid" time="0.05" steps="192"/></proof>
       </goal>
       <goal name="resolve_conflict&#39;vc.66.0.0.1.0.1" expl="asserted formula" proved="true">
       <transf name="unfold" proved="true" arg1="contains2" arg2="in" arg3="Hinst1">
        <goal name="resolve_conflict&#39;vc.66.0.0.1.0.1.0" expl="asserted formula" proved="true">
        <proof prover="5"><result status="valid" time="0.67" steps="7417"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.66.1" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.07" steps="336"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.67" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="26379"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.68" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.12" steps="38898"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="311"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.69" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="225736"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="188"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.70" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.38" steps="78250"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.71" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.71.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Assert">
    <goal name="resolve_conflict&#39;vc.71.0.0" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="0.07" steps="345"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.71.0.1" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="0.05" steps="197"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.71.0.2" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="0.05" steps="197"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.72" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="63975"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.73" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.34" steps="3609"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.74" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="26498"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="202"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.75" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="26531"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="210"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.76" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="409929"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="327"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.77" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.38" steps="80190"/></proof>
  <proof prover="3" timelimit="5"><result status="valid" time="0.07" steps="434327"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.78" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.22" steps="995348"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.79" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="228335"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="214"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.80" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="413509"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="360"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.81" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="229718"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="226"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.82" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="422354"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.83" expl="assertion" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="155403"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="147054"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5"><result status="valid" time="0.07" steps="405"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.84" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.30" steps="3201"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.85" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="417456"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="364"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.86" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.41" steps="83286"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.87" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="469062"/></proof>
  <proof prover="5"><result status="valid" time="0.32" steps="3548"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.88" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.09" steps="367"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.89" expl="loop invariant preservation" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.89.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="resolve_conflict&#39;vc.89.0.0" expl="VC for resolve_conflict" proved="true">
    <proof prover="3"><result status="valid" time="0.11" steps="449741"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.89.0.1" expl="VC for resolve_conflict" proved="true">
    <proof prover="5"><result status="valid" time="0.09" steps="374"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.90" expl="loop invariant preservation">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="157961"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.34"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="139990"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.91" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.91.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.29" steps="1119283"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.92" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.92.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.23" steps="850681"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.93" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="26905"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="248"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.94" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="392"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.95" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="1084"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.96" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.96.0" expl="loop invariant preservation" proved="true">
   <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
    <goal name="resolve_conflict&#39;vc.96.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="3"><result status="valid" time="0.10" steps="637055"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.96.1" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.09" steps="1091"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.97" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.14" steps="429435"/></proof>
  <proof prover="5"><result status="valid" time="0.08" steps="401"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.98" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.19" steps="2070"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.99" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.99.0" expl="precondition" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="1.30" steps="3432472"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.100" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.100.0" expl="assertion" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="3.63" steps="3581288"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.101" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.101.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="resolve_conflict&#39;vc.101.0.0" expl="assertion" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="resolve_conflict&#39;vc.101.0.0.0" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.101.0.0.0.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="8.60" steps="11165731"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.101.0.0.1" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.101.0.0.1.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="10.20" steps="11165226"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.101.0.0.2" expl="VC for resolve_conflict" proved="true">
     <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="13.57" steps="999060"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.102" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.102.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="resolve_conflict&#39;vc.102.0.0" expl="assertion" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="resolve_conflict&#39;vc.102.0.0.0" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.102.0.0.0.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="9.60" steps="11172545"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.102.0.0.1" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.102.0.0.1.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="9.08" steps="11172537"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.102.0.0.2" expl="VC for resolve_conflict" proved="true">
     <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="13.68" steps="1001061"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.103" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.103.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="resolve_conflict&#39;vc.103.0.0" expl="assertion" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="resolve_conflict&#39;vc.103.0.0.0" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.103.0.0.0.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="9.12" steps="11173385"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.103.0.0.1" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.103.0.0.1.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="9.29" steps="11173393"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.103.0.0.2" expl="VC for resolve_conflict" proved="true">
     <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="14.27" steps="1092058"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.104" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="69482"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.105" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="79740"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.106" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="26852"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="184"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.107" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.33" steps="68482"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.108" expl="loop invariant preservation" proved="true">
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="158423"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.108.0" expl="loop invariant preservation" proved="true">
   <transf name="case" proved="true" arg1="(i = length1 (inner produced_172) - 1)
">
    <goal name="resolve_conflict&#39;vc.108.0.0" expl="true case (loop invariant preservation)" proved="true">
    <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="460458"/></proof>
    <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
    <proof prover="5" timelimit="30" memlimit="4000"><undone/></proof>
    <transf name="assert" proved="true" arg1="(is_decision (conflict_0 (inner abs_cflct_11)) (term_value j_185) /\
  not is_bool1 (assignmentdeepmodel_val (shallow_model j_185)))">
     <goal name="resolve_conflict&#39;vc.108.0.0.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="149826"/></proof>
     <proof prover="3"><result status="valid" time="0.13" steps="614190"/></proof>
     <proof prover="5"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.108.0.0.1" expl="true case (loop invariant preservation)" proved="true">
     <proof prover="2"><result status="timeout" time="1.00" steps="151628"/></proof>
     <proof prover="3"><result status="timeout" time="1.00"/></proof>
     <proof prover="5"><result status="timeout" time="1.00"/></proof>
     <transf name="assert" proved="true" arg1="( level_of (conflict_0 (inner abs_cflct_11))
  (index_logic ( * trail_2) (get1 produced_172 i)) = level_log jix_184)">
      <goal name="resolve_conflict&#39;vc.108.0.0.1.0" expl="asserted formula" proved="true">
      <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="461117"/></proof>
      <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="1.16" steps="2525013"/></proof>
      <proof prover="5" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
      </goal>
      <goal name="resolve_conflict&#39;vc.108.0.0.1.1" expl="true case (loop invariant preservation)" proved="true">
      <proof prover="5"><result status="valid" time="0.08" steps="385"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="resolve_conflict&#39;vc.108.0.1" expl="false case (loop invariant preservation)" proved="true">
    <proof prover="3"><result status="valid" time="0.10" steps="536323"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.109" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.12" steps="1006"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.110" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.15" steps="228704"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="204"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.111" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.08" steps="477"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.112" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="416509"/></proof>
  <proof prover="5"><result status="valid" time="0.08" steps="405"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.113" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="405206"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="222"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.114" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="1.17" steps="9261"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.115" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="583"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.116" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="158"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.117" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="354"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.118" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="92"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.119" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="111"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.120" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.10" steps="1052"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.121" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="405"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.122" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.47" steps="4150"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.123" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.74" steps="156438"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl15" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl20" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.01" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl25" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl30" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl34" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl42" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl16" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl21" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl26" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl31" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl35" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl39" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl44">
 <goal name="partial_cmp_refn">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.00" steps="482176"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="4" obsolete="true"><result status="timeout" time="1.00" steps="425174"/></proof>
 <proof prover="5" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <transf name="smoke_detector_deep" >
  <goal name="partial_cmp_refn.0">
  <transf name="split_vc" >
   <goal name="partial_cmp_refn.0.0">
   <proof prover="0" timelimit="10" memlimit="4000" obsolete="true"><result status="unknown" time="0.03" steps="2966"/></proof>
   <proof prover="2" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="8.10" steps="4353787"/></proof>
   <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="8.43"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00" steps="400597"/></proof>
   <proof prover="5" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl45">
 <goal name="cmp_refn">
 <proof prover="0"><result status="unknown" time="0.02" steps="1587"/></proof>
 <proof prover="2"><result status="unknown" time="0.02" steps="2679"/></proof>
 <proof prover="3"><result status="unknown" time="0.01" steps="7107"/></proof>
 <proof prover="4"><result status="unknown" time="0.02" steps="2602"/></proof>
 <proof prover="5"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="cmp_refn.0">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="unknown" time="0.02" steps="1504"/></proof>
  <proof prover="2" timelimit="5" memlimit="2000"><result status="unknown" time="0.02" steps="2567"/></proof>
  <proof prover="3" timelimit="5" memlimit="2000"><result status="unknown" time="0.01" steps="6925"/></proof>
  <proof prover="5" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <transf name="inline_goal" >
   <goal name="cmp_refn.0.0">
   <transf name="split_all_full" >
    <goal name="cmp_refn.0.0.0">
    <proof prover="0" timelimit="10" memlimit="4000"><result status="unknown" time="0.05" steps="9364"/></proof>
    <proof prover="2" timelimit="10" memlimit="4000"><result status="unknown" time="0.08" steps="12042"/></proof>
    <proof prover="3" timelimit="10" memlimit="4000"><result status="timeout" time="8.13"/></proof>
    <proof prover="5" timelimit="10" memlimit="4000"><result status="timeout" time="10.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl7" proved="true">
 <goal name="cmp_le_log_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="valid" time="0.01" steps="94"/></proof>
 <proof prover="5"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="cmp_ge_log_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="cmp_gt_log_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="trans_refn" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="261"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="5"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="antisym2_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="valid" time="0.01" steps="94"/></proof>
 <proof prover="5"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="cmp_lt_log_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="eq_cmp_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="valid" time="0.01" steps="197"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="5"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="refl_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="valid" time="0.01" steps="197"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="5"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="antisym1_refn" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
</file>
</why3session>
