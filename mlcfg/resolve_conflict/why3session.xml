<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg">
<path name=".."/><path name="resolve_conflict.mlcfg"/>
<theory name="Cdsat_Concrete_Impl0_ResolveConflict" proved="true">
 <goal name="resolve_conflict&#39;vc" expl="VC for resolve_conflict" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resolve_conflict&#39;vc.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="18798"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="34"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="18864"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="44"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="264353"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="46"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="89"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="54"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="219"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.6" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(abstract_justification ( * trail) (shallow_model old_conflict) ==
  ix_to_abs ( * trail) (shallow_model7 heap))
">
   <goal name="resolve_conflict&#39;vc.6.0" expl="asserted formula" proved="true">
   <proof prover="3"><result status="valid" time="0.82" steps="2768590"/></proof>
   </goal>
   <goal name="resolve_conflict&#39;vc.6.1" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.04" steps="68"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.7" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="85"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.8" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.8.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.06" steps="474"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.9" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="70"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.10" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.15" steps="813163"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.11" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.40" steps="6238"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="91"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="262"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.32" steps="1286431"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.15" expl="loop invariant init" proved="true">
  <transf name="assert" proved="true" arg1="(set_level (inner (trail_ghost ( * trail))) (ix_to_abs ( * trail) (shallow_model7 heap)) = level_log (set_max (shallow_model7 heap)))
">
   <goal name="resolve_conflict&#39;vc.15.0" expl="asserted formula" proved="true">
   <proof prover="3"><result status="valid" time="0.13" steps="622280"/></proof>
   </goal>
   <goal name="resolve_conflict&#39;vc.15.1" expl="loop invariant init" proved="true">
   <proof prover="5"><result status="valid" time="0.23" steps="2507"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.16" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.16.0" expl="loop invariant init" proved="true">
   <proof prover="5"><result status="valid" time="0.97" steps="15007"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.17" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="102"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.18" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.08" steps="388521"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.19" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="248"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.20" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.74" steps="8435"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.21" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="40954"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.22" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="296"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.23" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.08" steps="360"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.23.0" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.06" steps="359"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.24" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.36" steps="61020"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.25" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.17" steps="50531"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.26" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="104"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.27" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.27.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="resolve_conflict&#39;vc.27.0.0" expl="assertion" proved="true">
    <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="0.36" steps="60744"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.27.0.1" expl="assertion" proved="true">
    <proof prover="2" timelimit="5"><result status="valid" time="2.50" steps="269746"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.28" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.28.0" expl="precondition" proved="true">
   <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="0.02" steps="355875"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.29" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.40" steps="66790"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.30" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.30" steps="56538"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.31" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="371425"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.32" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="161"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.33" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(to_int (trailindex_1 ix) = 0)">
   <goal name="resolve_conflict&#39;vc.33.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="0.05" steps="175"/></proof>
   </goal>
   <goal name="resolve_conflict&#39;vc.33.1" expl="assertion" proved="true">
   <transf name="case" proved="true" arg1="(rem_level = 0)">
    <goal name="resolve_conflict&#39;vc.33.1.0" expl="true case (assertion)" proved="true">
    <proof prover="5"><result status="valid" time="0.04" steps="124"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.33.1.1" expl="false case (assertion)" proved="true">
    <transf name="case" proved="true" arg1="(le_log ix2 ix)">
     <goal name="resolve_conflict&#39;vc.33.1.1.0" expl="false case (true case. assertion)" proved="true">
     <proof prover="2" timelimit="5"><result status="valid" time="1.99" steps="245960"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.33.1.1.1" expl="false case (assertion)" proved="true">
     <proof prover="2"><result status="valid" time="0.41" steps="67915"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.34" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="25212"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.35" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.35.0" expl="assertion" proved="true">
   <proof prover="5" timelimit="5" memlimit="2000"><result status="valid" time="0.15" steps="1724"/></proof>
   </goal>
   <goal name="resolve_conflict&#39;vc.35.1" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.15" steps="122"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.36" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="179"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.37" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="128"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.38" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.43" steps="71409"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.39" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="133"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.40" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(abstract_justification ( * trail) (shallow_model19 just) ==
  remove1 (conflict_1 (inner abs_cflct)) (term_value a1))">
   <goal name="resolve_conflict&#39;vc.40.0" expl="asserted formula" proved="true">
   <transf name="instantiate" proved="true" arg1="seq_to_set_spec" arg2="( * trail),(shallow_model19 just),( (shallow_model7 heap1))">
    <goal name="resolve_conflict&#39;vc.40.0.0" expl="asserted formula" proved="true">
    <transf name="destruct_rec" proved="true" arg1="Hinst">
     <goal name="resolve_conflict&#39;vc.40.0.0.0" expl="destruct premise" proved="true">
     <proof prover="5"><result status="valid" time="0.05" steps="133"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.40.0.0.1" expl="destruct premise" proved="true">
     <proof prover="5"><result status="valid" time="0.18" steps="1674"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.40.0.0.2" expl="destruct premise" proved="true">
     <proof prover="5"><result status="valid" time="0.06" steps="202"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.40.0.0.3" expl="asserted formula" proved="true">
     <proof prover="5"><result status="valid" time="0.09" steps="713"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.40.1" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.06" steps="206"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.41" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="139"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.42" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="285"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.43" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.11" steps="570907"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.44" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="238"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.45" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="49185"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.46" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.46.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="resolve_conflict&#39;vc.46.0.0" expl="assertion" proved="true">
    <proof prover="2" timelimit="5" memlimit="2000"><result status="valid" time="0.26" steps="47056"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.46.1" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.05" steps="122"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.47" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="146"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.48" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.35" steps="4852"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.49" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="26013"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.50" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.12" steps="38392"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="226"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.51" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.38" steps="68183"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.52" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="227"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.53" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="155"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.54" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(abstract_justification ( * trail1) (shallow_model19 just) = abstract_justification ( * trail) (shallow_model19 just))">
   <goal name="resolve_conflict&#39;vc.54.0" expl="asserted formula" proved="true">
   <transf name="assert" proved="true" arg1="((abstract_justification ( * trail1) (shallow_model19 just) == abstract_justification ( * trail) (shallow_model19 just)))">
    <goal name="resolve_conflict&#39;vc.54.0.0" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="(forall i . contains2 (shallow_model19 just) i -&gt; index_logic1 ( * trail) i = index_logic1 ( * trail1) i)">
     <goal name="resolve_conflict&#39;vc.54.0.0.0" expl="asserted formula" proved="true">
     <proof prover="5"><result status="valid" time="0.12" steps="881"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.54.0.0.1" expl="asserted formula" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="resolve_conflict&#39;vc.54.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="resolve_conflict&#39;vc.54.0.0.1.0.0" expl="asserted formula" proved="true">
       <transf name="assert" proved="true" arg1="(exists i . contains2 (shallow_model19 just) i &amp;&amp; x = index_logic1 ( * trail1) i)">
        <goal name="resolve_conflict&#39;vc.54.0.0.1.0.0.0" expl="asserted formula" proved="true">
        <proof prover="5"><result status="valid" time="0.39" steps="3838"/></proof>
        </goal>
        <goal name="resolve_conflict&#39;vc.54.0.0.1.0.0.1" expl="asserted formula" proved="true">
        <proof prover="5"><result status="valid" time="0.40" steps="4068"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="resolve_conflict&#39;vc.54.0.0.1.0.1" expl="asserted formula" proved="true">
       <transf name="assert" proved="true" arg1="(exists i . contains2 (shallow_model19 just) i &amp;&amp; x = index_logic1 ( * trail1) i)
">
        <goal name="resolve_conflict&#39;vc.54.0.0.1.0.1.0" expl="asserted formula" proved="true">
        <proof prover="5"><result status="valid" time="0.39" steps="3868"/></proof>
        </goal>
        <goal name="resolve_conflict&#39;vc.54.0.0.1.0.1.1" expl="asserted formula" proved="true">
        <proof prover="5"><result status="valid" time="0.13" steps="950"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="resolve_conflict&#39;vc.54.0.1" expl="asserted formula" proved="true">
    <proof prover="5"><result status="valid" time="0.07" steps="237"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.54.1" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.06" steps="161"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.55" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="165"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.56" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="167"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.57" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="247"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.58" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="400284"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.59" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.40" steps="4479"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.60" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.38" steps="4345"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.61" expl="assertion" proved="true">
  <transf name="clear_but" proved="true" arg1="H">
   <goal name="resolve_conflict&#39;vc.61.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="resolve_conflict&#39;vc.61.0.0" expl="assertion" proved="true">
    <proof prover="5"><result status="valid" time="0.01" steps="115"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.62" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.10" steps="315"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.63" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="424068"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.64" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="37514"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.65" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.11" steps="1729"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.66" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.66.0" expl="assertion" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="resolve_conflict&#39;vc.66.0.0" expl="assertion" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="resolve_conflict&#39;vc.66.0.0.0" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.66.0.0.0.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.09" steps="511323"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.66.0.0.1" expl="VC for resolve_conflict" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.66.0.0.1.0" expl="VC for resolve_conflict" proved="true">
      <proof prover="3" timelimit="30" memlimit="4000"><result status="valid" time="0.09" steps="511331"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.66.0.0.2" expl="VC for resolve_conflict" proved="true">
     <proof prover="2" timelimit="30" memlimit="4000"><result status="valid" time="0.54" steps="80078"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.67" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="132"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.68" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.30" steps="46712"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.69" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="134"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.70" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.09" steps="684"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.71" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="387996"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.72" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="140"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.73" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="25448"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="140"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.74" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="25492"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="148"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.75" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="388132"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="204"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.76" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="49486"/></proof>
  <proof prover="3"><result status="valid" time="0.05" steps="390931"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.77" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(exists i. 0 &lt;= i &lt; length1 (inner produced1) &amp;&amp; index_logic1 ( * trail) (get1 produced1 i) = t)">
   <goal name="resolve_conflict&#39;vc.77.0" expl="asserted formula" proved="true">
   <transf name="instantiate" proved="true" arg1="abstract_justification_spec" arg2="( * trail),(shallow_model19 just1)
">
    <goal name="resolve_conflict&#39;vc.77.0.0" expl="asserted formula" proved="true">
    <transf name="destruct_rec" proved="true" arg1="Hinst">
     <goal name="resolve_conflict&#39;vc.77.0.0.0" expl="destruct premise" proved="true">
     <proof prover="5"><result status="valid" time="0.07" steps="232"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.77.0.0.1" expl="asserted formula" proved="true">
     <transf name="instantiate" proved="true" arg1="Hinst2" arg2="t">
      <goal name="resolve_conflict&#39;vc.77.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="destruct_rec" proved="true" arg1="Hinst">
       <goal name="resolve_conflict&#39;vc.77.0.0.1.0.0" expl="destruct premise" proved="true">
       <proof prover="5"><result status="valid" time="0.06" steps="170"/></proof>
       </goal>
       <goal name="resolve_conflict&#39;vc.77.0.0.1.0.1" expl="asserted formula" proved="true">
       <transf name="unfold" proved="true" arg1="contains2" arg2="in" arg3="Hinst1">
        <goal name="resolve_conflict&#39;vc.77.0.0.1.0.1.0" expl="asserted formula" proved="true">
        <proof prover="5"><result status="valid" time="0.63" steps="6373"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.77.1" expl="assertion" proved="true">
   <proof prover="5"><result status="valid" time="0.07" steps="234"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.78" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="166"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.79" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="217"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.80" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="209653"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="166"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.81" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="77742"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.82" expl="precondition" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.82.0" expl="precondition" proved="true">
   <transf name="apply" proved="true" arg1="Assert">
    <goal name="resolve_conflict&#39;vc.82.0.0" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="0.07" steps="241"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.82.0.1" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="0.05" steps="175"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.82.0.2" expl="apply premises" proved="true">
    <proof prover="5"><result status="valid" time="0.05" steps="175"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.83" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="50078"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.84" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.31" steps="2841"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.85" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="26027"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="183"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.86" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="191"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.87" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="237"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.88" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.09" steps="423994"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.89" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="562788"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.90" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="212756"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="195"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.91" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="400381"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="261"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.92" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="391987"/></proof>
  <proof prover="5"><result status="valid" time="0.04" steps="207"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.93" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="409117"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.94" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="302"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.95" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.30" steps="2681"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.96" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="404067"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="272"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.97" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.23" steps="62746"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.98" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="215607"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="215"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.99" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="216"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.100" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.09" steps="293"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.101" expl="loop invariant preservation" proved="true">
  <transf name="assert" proved="true" arg1="(ix_to_abs ( * trail) (shallow_model7 heap) ==
  conflict_1 (inner abs_cflct))
">
   <goal name="resolve_conflict&#39;vc.101.0" expl="asserted formula" proved="true">
   <transf name="assert" proved="true" arg1="(forall i. contains3 (ix_to_abs ( * trail) (shallow_model7 heap)) i -&gt; contains3 (conflict_1 (inner abs_cflct)) i)
">
    <goal name="resolve_conflict&#39;vc.101.0.0" expl="asserted formula" proved="true">
    <proof prover="5"><result status="valid" time="0.29" steps="2778"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.101.0.1" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="(forall i. contains3 (conflict_1 (inner abs_cflct)) i -&gt; contains3 (ix_to_abs ( * trail) (shallow_model7 heap)) i)
">
     <goal name="resolve_conflict&#39;vc.101.0.1.0" expl="asserted formula" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve_conflict&#39;vc.101.0.1.0.0" expl="asserted formula" proved="true">
      <transf name="case" proved="true" arg1="(contains3 (abstract_justification ( * trail) (shallow_model19 just1)) i)
">
       <goal name="resolve_conflict&#39;vc.101.0.1.0.0.0" expl="true case (asserted formula)" proved="true">
       <transf name="assert" proved="true" arg1="(forall i. 0 &lt;= i &lt; length1 (shallow_model19 just1) -&gt; contains (shallow_model7 heap) (shallow_model19 just1)[i]&#39;)
">
        <goal name="resolve_conflict&#39;vc.101.0.1.0.0.0.0" expl="asserted formula" proved="true">
        <proof prover="5"><result status="valid" time="0.31" steps="3001"/></proof>
        </goal>
        <goal name="resolve_conflict&#39;vc.101.0.1.0.0.0.1" expl="true case (asserted formula)" proved="true">
        <transf name="inline_goal" proved="true" >
         <goal name="resolve_conflict&#39;vc.101.0.1.0.0.0.1.0" expl="true case (asserted formula)" proved="true">
         <transf name="split_all_full" proved="true" >
          <goal name="resolve_conflict&#39;vc.101.0.1.0.0.0.1.0.0" expl="true case (asserted formula)" proved="true">
          <proof prover="2" timelimit="10"><result status="valid" time="6.64" steps="684455"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
       <goal name="resolve_conflict&#39;vc.101.0.1.0.0.1" expl="false case (asserted formula)" proved="true">
       <proof prover="3"><result status="valid" time="0.18" steps="791855"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="resolve_conflict&#39;vc.101.0.1.1" expl="asserted formula" proved="true">
     <proof prover="5"><result status="valid" time="0.28" steps="2682"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.101.1" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.07" steps="295"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.102" expl="loop invariant preservation" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.102.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="resolve_conflict&#39;vc.102.0.0" expl="VC for resolve_conflict" proved="true">
    <proof prover="3"><result status="valid" time="0.11" steps="435283"/></proof>
    </goal>
    <goal name="resolve_conflict&#39;vc.102.0.1" expl="VC for resolve_conflict" proved="true">
    <proof prover="5"><result status="valid" time="0.09" steps="301"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.103" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.23" steps="2781"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.104" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.104.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.29" steps="1033360"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.105" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.105.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.19" steps="805845"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.106" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="227"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.107" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="298"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.108" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="693"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.109" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve_conflict&#39;vc.109.0" expl="loop invariant preservation" proved="true">
   <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
    <goal name="resolve_conflict&#39;vc.109.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="3"><result status="valid" time="0.10" steps="613949"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="resolve_conflict&#39;vc.109.1" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.09" steps="695"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.110" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.08" steps="310"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.111" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="1513"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.112" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.112.0" expl="assertion" proved="true">
   <proof prover="3" timelimit="5" memlimit="2000"><result status="valid" time="1.08" steps="2685237"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.113" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="178"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.114" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.114.0" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="2.03" steps="2929605"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.115" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.61" steps="89649"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.116" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.54" steps="89764"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.117" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.55" steps="89868"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="5"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.118" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="67360"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.119" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.51" steps="77277"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.120" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="26233"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="162"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.121" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.33" steps="66417"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.122" expl="loop invariant preservation" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="resolve_conflict&#39;vc.122.0" expl="loop invariant preservation" proved="true">
   <transf name="case" proved="true" arg1="(i = length1 (inner produced1) - 1)">
    <goal name="resolve_conflict&#39;vc.122.0.0" expl="true case (loop invariant preservation)" proved="true">
    <transf name="assert" proved="true" arg1="(is_decision (conflict_0 (inner abs_cflct)) (term_value j) /\
  not is_bool1 (assignmentdeepmodel_val (shallow_model1 j)))">
     <goal name="resolve_conflict&#39;vc.122.0.0.0" expl="asserted formula" proved="true">
     <proof prover="3"><result status="valid" time="0.12" steps="597197"/></proof>
     </goal>
     <goal name="resolve_conflict&#39;vc.122.0.0.1" expl="true case (loop invariant preservation)" proved="true">
     <transf name="assert" proved="true" arg1="( level_of (conflict_0 (inner abs_cflct))
  (index_logic1 ( * trail) (get1 produced1 i)) = level_log jix)">
      <goal name="resolve_conflict&#39;vc.122.0.0.1.0" expl="asserted formula" proved="true">
      <proof prover="3"><result status="valid" time="0.10" steps="518999"/></proof>
      </goal>
      <goal name="resolve_conflict&#39;vc.122.0.0.1.1" expl="true case (loop invariant preservation)" proved="true">
      <proof prover="5"><result status="valid" time="0.06" steps="182"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="resolve_conflict&#39;vc.122.0.1" expl="false case (loop invariant preservation)" proved="true">
    <proof prover="3"><result status="valid" time="0.10" steps="514407"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolve_conflict&#39;vc.123" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="554"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.124" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.07" steps="211991"/></proof>
  <proof prover="5"><result status="valid" time="0.06" steps="174"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.125" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.08" steps="264"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.126" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="400876"/></proof>
  <proof prover="5"><result status="valid" time="0.08" steps="252"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.127" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.15" steps="388346"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="184"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.128" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.53" steps="7160"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.129" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.12" steps="455"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.130" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="134"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.131" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="216"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.132" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="20416"/></proof>
  <proof prover="5"><result status="valid" time="0.05" steps="76"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.133" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.07" steps="82"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.134" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.10" steps="778"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.135" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="332"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.136" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.28" steps="2549"/></proof>
  </goal>
  <goal name="resolve_conflict&#39;vc.137" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.50" steps="136594"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl15" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl20" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.01" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl25" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl30" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl34" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl42" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl16" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl21" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl26" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl31" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl35" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5" timelimit="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl39" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl44">
 <goal name="partial_cmp_refn">
 <proof prover="0"><result status="timeout" time="1.00" steps="391117"/></proof>
 <proof prover="2"><result status="timeout" time="1.00" steps="217724"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <proof prover="5"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl45">
 <goal name="cmp_refn">
 <proof prover="0"><result status="unknown" time="0.02" steps="1587"/></proof>
 <proof prover="2"><result status="unknown" time="0.03" steps="2679"/></proof>
 <proof prover="3"><result status="unknown" time="0.01" steps="7107"/></proof>
 <proof prover="5"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl7" proved="true">
 <goal name="cmp_le_log_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="94"/></proof>
 </goal>
 <goal name="cmp_ge_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="cmp_gt_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="trans_refn" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="261"/></proof>
 </goal>
 <goal name="antisym2_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.01" steps="94"/></proof>
 </goal>
 <goal name="cmp_lt_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="eq_cmp_refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="197"/></proof>
 </goal>
 <goal name="refl_refn" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="197"/></proof>
 </goal>
 <goal name="antisym1_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
</theory>
</file>
</why3session>
