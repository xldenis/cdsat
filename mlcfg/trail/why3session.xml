<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg">
<path name=".."/><path name="trail.mlcfg"/>
<theory name="Cdsat_Trail_Remove_Impl" proved="true">
 <goal name="remove&#39;vc" expl="VC for remove" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="remove&#39;vc.0" expl="VC for remove" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="remove&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="5"><result status="valid" time="0.000000" steps="23"/></proof>
   </goal>
   <goal name="remove&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="0.007436" steps="10"/></proof>
   </goal>
   <goal name="remove&#39;vc.0.2" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="0.006821" steps="10"/></proof>
   </goal>
   <goal name="remove&#39;vc.0.3" expl="variant decrease" proved="true">
   <proof prover="5"><result status="valid" time="0.000000" steps="23"/></proof>
   </goal>
   <goal name="remove&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="0.006804" steps="10"/></proof>
   </goal>
   <goal name="remove&#39;vc.0.5" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="0.006675" steps="10"/></proof>
   </goal>
   <goal name="remove&#39;vc.0.6" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove&#39;vc.0.6.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.000000" steps="14"/></proof>
    </goal>
    <goal name="remove&#39;vc.0.6.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.020000" steps="584"/></proof>
    </goal>
    <goal name="remove&#39;vc.0.6.2" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(contains (subsequence s 0 (length s - 1)) t)">
     <goal name="remove&#39;vc.0.6.2.0" expl="true case (postcondition)" proved="true">
     <proof prover="5"><result status="valid" time="0.040000" steps="894"/></proof>
     </goal>
     <goal name="remove&#39;vc.0.6.2.1" expl="false case (postcondition)" proved="true">
     <proof prover="5"><result status="valid" time="0.040000" steps="946"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.0.7" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="remove&#39;vc.0.7.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.000000" steps="12"/></proof>
    </goal>
    <goal name="remove&#39;vc.0.7.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.020000" steps="495"/></proof>
    </goal>
    <goal name="remove&#39;vc.0.7.2" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(contains (subsequence s 0 (length s - 1)) t)">
     <goal name="remove&#39;vc.0.7.2.0" expl="true case (postcondition)" proved="true">
     <proof prover="5"><result status="valid" time="0.040000" steps="937"/></proof>
     </goal>
     <goal name="remove&#39;vc.0.7.2.1" expl="false case (postcondition)" proved="true">
     <proof prover="5"><result status="valid" time="0.040000" steps="1009"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="remove&#39;vc.0.8" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.050000" steps="1104"/></proof>
   </goal>
   <goal name="remove&#39;vc.0.9" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.060000" steps="1690"/></proof>
   </goal>
   <goal name="remove&#39;vc.0.10" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="63"/></proof>
   </goal>
   <goal name="remove&#39;vc.0.11" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010356" steps="47"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl9_AbstractJustification_Impl" proved="true">
 <goal name="abstract_justification&#39;vc" expl="VC for abstract_justification" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="abstract_justification&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.014009" steps="17"/></proof>
  </goal>
  <goal name="abstract_justification&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.013438" steps="18"/></proof>
  </goal>
  <goal name="abstract_justification&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.014749" steps="53"/></proof>
  </goal>
  <goal name="abstract_justification&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.576194" steps="78994"/></proof>
  </goal>
  <goal name="abstract_justification&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.023424" steps="168"/></proof>
  </goal>
  <goal name="abstract_justification&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.046255" steps="431"/></proof>
  </goal>
  <goal name="abstract_justification&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.033746" steps="616"/></proof>
  </goal>
  <goal name="abstract_justification&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="abstract_justification&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="1.463823" steps="199894"/></proof>
   </goal>
   <goal name="abstract_justification&#39;vc.7.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.088783" steps="23227"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl9_Indices" proved="true">
 <goal name="indices&#39;vc" expl="VC for indices" proved="true">
 <proof prover="5"><result status="valid" time="0.020842" steps="30"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl10_Next" proved="true">
 <goal name="next&#39;vc" expl="VC for next" proved="true">
 <proof prover="5"><result status="valid" time="0.499866" steps="2062"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl10_Trail" proved="true">
 <goal name="trail&#39;vc" expl="VC for trail" proved="true">
 <proof prover="5"><result status="valid" time="0.012691" steps="13"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl11_Index" proved="true">
 <goal name="index&#39;vc" expl="VC for index" proved="true">
 <proof prover="5"><result status="valid" time="0.021630" steps="184"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl9_AbsJustExtend_Impl" proved="true">
 <goal name="abs_just_extend&#39;vc" expl="VC for abs_just_extend" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="abs_just_extend&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.144800" steps="29646"/></proof>
  </goal>
  <goal name="abs_just_extend&#39;vc.1" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.022652" steps="19"/></proof>
  </goal>
  <goal name="abs_just_extend&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.029907" steps="207"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl9_IndexOf" proved="true">
 <goal name="index_of&#39;vc" expl="VC for index_of" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="index_of&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.012924" steps="13"/></proof>
  </goal>
  <goal name="index_of&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.014907" steps="20"/></proof>
  </goal>
  <goal name="index_of&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.015373" steps="24"/></proof>
  </goal>
  <goal name="index_of&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.017796" steps="61"/></proof>
  </goal>
  <goal name="index_of&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.018431" steps="39"/></proof>
  </goal>
  <goal name="index_of&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.016322" steps="37"/></proof>
  </goal>
  <goal name="index_of&#39;vc.6" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.018295" steps="52"/></proof>
  </goal>
  <goal name="index_of&#39;vc.7" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.021241" steps="59"/></proof>
  </goal>
  <goal name="index_of&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.021380" steps="64"/></proof>
  </goal>
  <goal name="index_of&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.026294" steps="159"/></proof>
  </goal>
  <goal name="index_of&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.022474" steps="80"/></proof>
  </goal>
  <goal name="index_of&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.023989" steps="84"/></proof>
  </goal>
  <goal name="index_of&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.056895" steps="731"/></proof>
  </goal>
  <goal name="index_of&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.024247" steps="90"/></proof>
  </goal>
  <goal name="index_of&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.045711" steps="497"/></proof>
  </goal>
  <goal name="index_of&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.086014" steps="1203"/></proof>
  </goal>
  <goal name="index_of&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.024669" steps="100"/></proof>
  </goal>
  <goal name="index_of&#39;vc.17" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.588760" steps="10593"/></proof>
  </goal>
  <goal name="index_of&#39;vc.18" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.023363" steps="103"/></proof>
  </goal>
  <goal name="index_of&#39;vc.19" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.023275" steps="105"/></proof>
  </goal>
  <goal name="index_of&#39;vc.20" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.065533" steps="639"/></proof>
  </goal>
  <goal name="index_of&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.024833" steps="111"/></proof>
  </goal>
  <goal name="index_of&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.049476" steps="667"/></proof>
  </goal>
  <goal name="index_of&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.026110" steps="122"/></proof>
  </goal>
  <goal name="index_of&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.200062" steps="3974"/></proof>
  </goal>
  <goal name="index_of&#39;vc.25" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.203584" steps="2551"/></proof>
  </goal>
  <goal name="index_of&#39;vc.26" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.021042" steps="100"/></proof>
  </goal>
  <goal name="index_of&#39;vc.27" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="index_of&#39;vc.27.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.112105" steps="26986"/></proof>
   </goal>
   <goal name="index_of&#39;vc.27.1" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.020893" steps="111127"/></proof>
   </goal>
   <goal name="index_of&#39;vc.27.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="index_of&#39;vc.27.2.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.036236" steps="295"/></proof>
    </goal>
    <goal name="index_of&#39;vc.27.2.1" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.012476" steps="21503"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl5_CmpLeLog_Impl" proved="true">
 <goal name="cmp_le_log&#39;vc" expl="VC for cmp_le_log" proved="true">
 <proof prover="5"><result status="valid" time="0.006965" steps="12"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl5_CmpLtLog_Impl" proved="true">
 <goal name="cmp_lt_log&#39;vc" expl="VC for cmp_lt_log" proved="true">
 <proof prover="5"><result status="valid" time="0.006798" steps="11"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl5_CmpGeLog_Impl" proved="true">
 <goal name="cmp_ge_log&#39;vc" expl="VC for cmp_ge_log" proved="true">
 <proof prover="5"><result status="valid" time="0.007100" steps="12"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl5_CmpGtLog_Impl" proved="true">
 <goal name="cmp_gt_log&#39;vc" expl="VC for cmp_gt_log" proved="true">
 <proof prover="5"><result status="valid" time="0.006912" steps="11"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl5_Refl_Impl" proved="true">
 <goal name="refl&#39;vc" expl="VC for refl" proved="true">
 <proof prover="5"><result status="valid" time="0.006686" steps="24"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl5_Trans_Impl" proved="true">
 <goal name="trans&#39;vc" expl="VC for trans" proved="true">
 <proof prover="5"><result status="valid" time="0.037222" steps="838"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl5_Antisym1_Impl" proved="true">
 <goal name="antisym1&#39;vc" expl="VC for antisym1" proved="true">
 <proof prover="5"><result status="valid" time="0.012844" steps="204"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl5_Antisym2_Impl" proved="true">
 <goal name="antisym2&#39;vc" expl="VC for antisym2" proved="true">
 <proof prover="5"><result status="valid" time="0.013175" steps="196"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl5_EqCmp_Impl" proved="true">
 <goal name="eq_cmp&#39;vc" expl="VC for eq_cmp" proved="true">
 <proof prover="5"><result status="valid" time="0.011545" steps="152"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl9_AbsJustCons_Impl" proved="true">
 <goal name="abs_just_cons&#39;vc" expl="VC for abs_just_cons" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="abs_just_cons&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(abstract_justification self (singleton1 elem ++ just) ==
  insert (abstract_justification self just) (index_logic self elem))">
   <goal name="abs_just_cons&#39;vc.0.0" expl="asserted formula" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="abs_just_cons&#39;vc.0.0.0" expl="asserted formula" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="abs_just_cons&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="5"><result status="valid" time="0.336827" steps="4420"/></proof>
     </goal>
     <goal name="abs_just_cons&#39;vc.0.0.0.1" expl="asserted formula" proved="true">
     <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
      <goal name="abs_just_cons&#39;vc.0.0.0.1.0" expl="asserted formula" proved="true">
      <proof prover="5"><result status="valid" time="0.329614" steps="5626"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="abs_just_cons&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.018037" steps="24"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl9_AbsJustSnoc_Impl" proved="true">
 <goal name="abs_just_snoc&#39;vc" expl="VC for abs_just_snoc" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="abs_just_snoc&#39;vc.0" expl="VC for abs_just_snoc" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="abs_just_snoc&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.181728" steps="42675"/></proof>
   <proof prover="1"><result status="valid" time="0.152831" steps="32364"/></proof>
   <proof prover="5"><result status="valid" time="0.018904" steps="79"/></proof>
   </goal>
   <goal name="abs_just_snoc&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="0.051026" steps="736"/></proof>
   </goal>
   <goal name="abs_just_snoc&#39;vc.0.2" expl="variant decrease" proved="true">
   <proof prover="0"><result status="valid" time="0.213257" steps="40303"/></proof>
   <proof prover="1"><result status="valid" time="0.194611" steps="28884"/></proof>
   <proof prover="3"><result status="valid" time="0.026602" steps="304804"/></proof>
   <proof prover="5"><result status="valid" time="0.021195" steps="106"/></proof>
   </goal>
   <goal name="abs_just_snoc&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.136585" steps="37198"/></proof>
   <proof prover="1"><result status="valid" time="0.075698" steps="22791"/></proof>
   <proof prover="3"><result status="valid" time="0.012105" steps="12232"/></proof>
   <proof prover="5"><result status="valid" time="0.016627" steps="20"/></proof>
   </goal>
   <goal name="abs_just_snoc&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.238317" steps="47501"/></proof>
   <proof prover="1"><result status="valid" time="0.204387" steps="39651"/></proof>
   <proof prover="5"><result status="valid" time="0.060961" steps="695"/></proof>
   </goal>
   <goal name="abs_just_snoc&#39;vc.0.5" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(forall i j s. insert (insert s j) i = insert (insert s i) j)">
    <goal name="abs_just_snoc&#39;vc.0.5.0" expl="asserted formula" proved="true">
    <transf name="assert" proved="true" arg1="(forall i j s. insert (insert s j) i == insert (insert s i) j)">
     <goal name="abs_just_snoc&#39;vc.0.5.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.460455" steps="87166"/></proof>
     <proof prover="1"><result status="valid" time="0.588285" steps="88221"/></proof>
     <proof prover="5"><result status="valid" time="0.028833" steps="140"/></proof>
     </goal>
     <goal name="abs_just_snoc&#39;vc.0.5.0.1" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.225442" steps="49316"/></proof>
     <proof prover="1"><result status="valid" time="0.211771" steps="40638"/></proof>
     <proof prover="3"><result status="valid" time="0.028843" steps="188915"/></proof>
     <proof prover="5"><result status="valid" time="0.020312" steps="65"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="abs_just_snoc&#39;vc.0.5.1" expl="postcondition" proved="true">
    <proof prover="5" timelimit="10" memlimit="4000"><result status="valid" time="4.828780" steps="70020"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_AbstractJustificationInsert_Impl" proved="true">
 <goal name="abstract_justification_insert&#39;vc" expl="VC for abstract_justification_insert" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="abstract_justification_insert&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.024192" steps="26"/></proof>
  </goal>
  <goal name="abstract_justification_insert&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.031095" steps="161"/></proof>
  </goal>
  <goal name="abstract_justification_insert&#39;vc.2" expl="postcondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="abstract_justification_insert&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="abstract_justification_insert&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.022653" steps="30"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_IxToAbs_Impl" proved="true">
 <goal name="ix_to_abs&#39;vc" expl="VC for ix_to_abs" proved="true">
 <proof prover="5"><result status="valid" time="0.820609" steps="20055"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_IxToAbsRemove_Impl" proved="true">
 <goal name="ix_to_abs_remove&#39;vc" expl="VC for ix_to_abs_remove" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ix_to_abs_remove&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.028074" steps="38"/></proof>
  </goal>
  <goal name="ix_to_abs_remove&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.026292" steps="41"/></proof>
  </goal>
  <goal name="ix_to_abs_remove&#39;vc.2" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.247249" steps="4677"/></proof>
  </goal>
  <goal name="ix_to_abs_remove&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.023250" steps="36"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_SetMax_Impl" proved="true">
 <goal name="set_max&#39;vc" expl="VC for set_max" proved="true">
 <proof prover="5"><result status="valid" time="0.070000" steps="1257"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_IxToAbsLevel_Impl" proved="true">
 <goal name="ix_to_abs_level&#39;vc" expl="VC for ix_to_abs_level" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ix_to_abs_level&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.022978" steps="26"/></proof>
  </goal>
  <goal name="ix_to_abs_level&#39;vc.1" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.755001" steps="18491"/></proof>
  </goal>
  <goal name="ix_to_abs_level&#39;vc.2" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.053592" steps="447"/></proof>
  </goal>
  <goal name="ix_to_abs_level&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.218121" steps="3943"/></proof>
  </goal>
  <goal name="ix_to_abs_level&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.036124" steps="218"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_IxToAbsInsert_Impl" proved="true">
 <goal name="ix_to_abs_insert&#39;vc" expl="VC for ix_to_abs_insert" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ix_to_abs_insert&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.025740" steps="37"/></proof>
  </goal>
  <goal name="ix_to_abs_insert&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.025984" steps="40"/></proof>
  </goal>
  <goal name="ix_to_abs_insert&#39;vc.2" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.063148" steps="684"/></proof>
  </goal>
  <goal name="ix_to_abs_insert&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.023487" steps="36"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl5_TrailPlausible_Impl" proved="true">
 <goal name="trail_plausible&#39;vc" expl="VC for trail_plausible" proved="true">
 <proof prover="5"><result status="valid" time="0.279221" steps="5381"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_SeqToSet_Impl" proved="true">
 <goal name="seq_to_set&#39;vc" expl="VC for seq_to_set" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="seq_to_set&#39;vc.0" expl="VC for seq_to_set" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="seq_to_set&#39;vc.0.0" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="0.017493" steps="17"/></proof>
   </goal>
   <goal name="seq_to_set&#39;vc.0.1" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="0.014739" steps="20"/></proof>
   </goal>
   <goal name="seq_to_set&#39;vc.0.2" expl="variant decrease" proved="true">
   <proof prover="5"><result status="valid" time="0.020000" steps="70"/></proof>
   </goal>
   <goal name="seq_to_set&#39;vc.0.3" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="0.020000" steps="97"/></proof>
   </goal>
   <goal name="seq_to_set&#39;vc.0.4" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="0.020000" steps="92"/></proof>
   </goal>
   <goal name="seq_to_set&#39;vc.0.5" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="seq_to_set&#39;vc.0.5.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.030000" steps="417"/></proof>
    </goal>
    <goal name="seq_to_set&#39;vc.0.5.1" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(abstract_justification trail s == ix_to_abs trail t)">
     <goal name="seq_to_set&#39;vc.0.5.1.0" expl="asserted formula" proved="true">
     <proof prover="5"><result status="valid" time="0.439658" steps="6711"/></proof>
     </goal>
     <goal name="seq_to_set&#39;vc.0.5.1.1" expl="postcondition" proved="true">
     <proof prover="5"><result status="valid" time="0.020000" steps="42"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl8_Level" proved="true">
 <goal name="level&#39;vc" expl="VC for level" proved="true">
 <proof prover="5"><result status="valid" time="0.005127" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl18_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <proof prover="5"><result status="valid" time="0.006981" steps="45"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl13_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="clone&#39;&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.009456" steps="26"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl12_IsBool" proved="true">
 <goal name="is_bool&#39;vc" expl="VC for is_bool" proved="true">
 <proof prover="5"><result status="valid" time="0.007712" steps="8"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl12_IsFirstOrder" proved="true">
 <goal name="is_first_order&#39;vc" expl="VC for is_first_order" proved="true">
 <proof prover="5"><result status="valid" time="0.007765" steps="8"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl19_Eq" proved="true">
 <goal name="eq&#39;vc" expl="VC for eq" proved="true">
 <proof prover="5"><result status="valid" time="0.021364" steps="493"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl12_IsDecision" proved="true">
 <goal name="is_decision&#39;vc" expl="VC for is_decision" proved="true">
 <proof prover="5"><result status="valid" time="0.011931" steps="77"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl9_Justification" proved="true">
 <goal name="justification&#39;vc" expl="VC for justification" proved="true">
 <proof prover="5"><result status="valid" time="0.903313" steps="12537"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl9_ReasonsDontChange_Impl" proved="true">
 <goal name="reasons_dont_change&#39;vc" expl="VC for reasons_dont_change" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="reasons_dont_change&#39;vc.0" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.109631" steps="1248"/></proof>
  </goal>
  <goal name="reasons_dont_change&#39;vc.1" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.153112" steps="2153"/></proof>
  </goal>
  <goal name="reasons_dont_change&#39;vc.2" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.162088" steps="2290"/></proof>
  </goal>
  <goal name="reasons_dont_change&#39;vc.3" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.182155" steps="2420"/></proof>
  </goal>
  <goal name="reasons_dont_change&#39;vc.4" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.039956" steps="59"/></proof>
  </goal>
  <goal name="reasons_dont_change&#39;vc.5" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.049712" steps="227"/></proof>
  </goal>
  <goal name="reasons_dont_change&#39;vc.6" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.278325" steps="3618"/></proof>
  </goal>
  <goal name="reasons_dont_change&#39;vc.7" expl="postcondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="reasons_dont_change&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="reasons_dont_change&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.039256" steps="270773"/></proof>
    </goal>
    <goal name="reasons_dont_change&#39;vc.7.0.1" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.204539" steps="48263"/></proof>
    </goal>
    <goal name="reasons_dont_change&#39;vc.7.0.2" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.040418" steps="270012"/></proof>
    </goal>
    <goal name="reasons_dont_change&#39;vc.7.0.3" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.039481" steps="267975"/></proof>
    </goal>
    <goal name="reasons_dont_change&#39;vc.7.0.4" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.047129" steps="162"/></proof>
    </goal>
    <goal name="reasons_dont_change&#39;vc.7.0.5" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.048316" steps="169"/></proof>
    </goal>
    <goal name="reasons_dont_change&#39;vc.7.0.6" expl="postcondition" proved="true">
    <proof prover="3"><result status="valid" time="0.039479" steps="272204"/></proof>
    </goal>
    <goal name="reasons_dont_change&#39;vc.7.0.7" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(justification (inner (trail_ghost other)) (index_logic3 other ix) == abstract_justification other (shallow_model j))">
     <goal name="reasons_dont_change&#39;vc.7.0.7.0" expl="asserted formula" proved="true">
     <proof prover="5" timelimit="5"><result status="valid" time="1.718541" steps="21569"/></proof>
     </goal>
     <goal name="reasons_dont_change&#39;vc.7.0.7.1" expl="postcondition" proved="true">
     <proof prover="5"><result status="valid" time="0.039779" steps="59"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl9_Restrict" proved="true">
 <goal name="restrict&#39;vc" expl="VC for restrict" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="restrict&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.039573" steps="105"/></proof>
  </goal>
  <goal name="restrict&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.027491" steps="30"/></proof>
  </goal>
  <goal name="restrict&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.038755" steps="51"/></proof>
  </goal>
  <goal name="restrict&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.039658" steps="51"/></proof>
  </goal>
  <goal name="restrict&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.030583" steps="30"/></proof>
  </goal>
  <goal name="restrict&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.041853" steps="72"/></proof>
  </goal>
  <goal name="restrict&#39;vc.6" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.048973" steps="89"/></proof>
  </goal>
  <goal name="restrict&#39;vc.7" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.039145" steps="48"/></proof>
  </goal>
  <goal name="restrict&#39;vc.8" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.469178" steps="5006"/></proof>
  </goal>
  <goal name="restrict&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.059503" steps="230"/></proof>
  </goal>
  <goal name="restrict&#39;vc.10" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.056108" steps="119"/></proof>
  </goal>
  <goal name="restrict&#39;vc.11" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.051824" steps="116"/></proof>
  </goal>
  <goal name="restrict&#39;vc.12" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="restrict&#39;vc.12.0" expl="assertion" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="restrict&#39;vc.12.0.0" expl="assertion" proved="true">
    <proof prover="5"><result status="valid" time="0.557951" steps="5897"/></proof>
    </goal>
    <goal name="restrict&#39;vc.12.0.1" expl="assertion" proved="true">
    <proof prover="5"><result status="valid" time="0.773247" steps="8230"/></proof>
    </goal>
    <goal name="restrict&#39;vc.12.0.2" expl="assertion" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="restrict&#39;vc.12.0.2.0" expl="assertion" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="restrict&#39;vc.12.0.2.0.0" expl="assertion" proved="true">
      <proof prover="5"><result status="valid" time="0.547613" steps="5762"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="restrict&#39;vc.13" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.079257" steps="162"/></proof>
  </goal>
  <goal name="restrict&#39;vc.14" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.083414" steps="175"/></proof>
  </goal>
  <goal name="restrict&#39;vc.15" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.122040" steps="642"/></proof>
  </goal>
  <goal name="restrict&#39;vc.16" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.094833" steps="301"/></proof>
  </goal>
  <goal name="restrict&#39;vc.17" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.227227" steps="1889"/></proof>
  </goal>
  <goal name="restrict&#39;vc.18" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.423912" steps="86411"/></proof>
  </goal>
  <goal name="restrict&#39;vc.19" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.403108" steps="85273"/></proof>
  </goal>
  <goal name="restrict&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.121034" steps="623"/></proof>
  </goal>
  <goal name="restrict&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.087467" steps="196"/></proof>
  </goal>
  <goal name="restrict&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.348022" steps="3407"/></proof>
  </goal>
  <goal name="restrict&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.357854" steps="3462"/></proof>
  </goal>
  <goal name="restrict&#39;vc.24" expl="loop invariant preservation" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="restrict&#39;vc.24.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="restrict&#39;vc.24.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="5"><result status="valid" time="0.074095" steps="98"/></proof>
    </goal>
    <goal name="restrict&#39;vc.24.0.1" expl="loop invariant preservation" proved="true">
    <proof prover="5"><result status="valid" time="0.086444" steps="199"/></proof>
    </goal>
    <goal name="restrict&#39;vc.24.0.2" expl="loop invariant preservation" proved="true">
    <proof prover="5"><result status="valid" time="0.088293" steps="201"/></proof>
    </goal>
    <goal name="restrict&#39;vc.24.0.3" expl="loop invariant preservation" proved="true">
    <proof prover="5"><result status="valid" time="0.095406" steps="275"/></proof>
    </goal>
    <goal name="restrict&#39;vc.24.0.4" expl="loop invariant preservation" proved="true">
    <proof prover="5"><result status="valid" time="0.126794" steps="740"/></proof>
    </goal>
    <goal name="restrict&#39;vc.24.0.5" expl="loop invariant preservation" proved="true">
    <proof prover="5"><result status="valid" time="0.184897" steps="1535"/></proof>
    </goal>
    <goal name="restrict&#39;vc.24.0.6" expl="loop invariant preservation" proved="true">
    <proof prover="1"><result status="valid" time="0.491384" steps="89179"/></proof>
    </goal>
    <goal name="restrict&#39;vc.24.0.7" expl="loop invariant preservation" proved="true">
    <proof prover="1"><result status="valid" time="0.494329" steps="89007"/></proof>
    </goal>
    <goal name="restrict&#39;vc.24.0.8" expl="loop invariant preservation" proved="true">
    <proof prover="5"><result status="valid" time="0.370320" steps="4490"/></proof>
    </goal>
    <goal name="restrict&#39;vc.24.0.9" expl="loop invariant preservation" proved="true">
    <proof prover="5"><result status="valid" time="0.076300" steps="98"/></proof>
    </goal>
    <goal name="restrict&#39;vc.24.0.10" expl="loop invariant preservation" proved="true">
    <proof prover="5"><result status="valid" time="0.297693" steps="3360"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="restrict&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.043179" steps="63"/></proof>
  </goal>
  <goal name="restrict&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.051305" steps="81"/></proof>
  </goal>
  <goal name="restrict&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.281135" steps="3416"/></proof>
  </goal>
  <goal name="restrict&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.073488" steps="325"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl9_AbsJustEquiv_Impl" proved="true">
 <goal name="abs_just_equiv&#39;vc" expl="VC for abs_just_equiv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="abs_just_equiv&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(abstract_justification self just == abstract_justification other just)">
   <goal name="abs_just_equiv&#39;vc.0.0" expl="asserted formula" proved="true">
   <proof prover="5"><result status="valid" time="0.096803" steps="1316"/></proof>
   </goal>
   <goal name="abs_just_equiv&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.015513" steps="19"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl9_AddJustified">
 <goal name="add_justified&#39;vc" expl="VC for add_justified">
 <transf name="split_vc" >
  <goal name="add_justified&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.030605" steps="38"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.039258" steps="43"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.025289" steps="44"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.045015" steps="427"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.4" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.032888" steps="128"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.029139" steps="62"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.6" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.052500" steps="392"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.7" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.034577" steps="80"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.8" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.036132" steps="86"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.9" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.029707" steps="62"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.10" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.033119" steps="62"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.11" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.075708" steps="695"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.12" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.042657" steps="198"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.13" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.038287" steps="94"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.14" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.115315" steps="1249"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.15" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.033328" steps="70"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.16" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.039046" steps="96"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.17" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.039502" steps="105"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.18" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.457693" steps="74463"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.19" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.064561" steps="370"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.20" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.057636" steps="131"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.21" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.056238" steps="132"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.22" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.041763" steps="90"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.23" expl="assertion">
  <proof prover="0"><result status="timeout" time="1.000000" steps="164764"/></proof>
  <proof prover="1"><result status="timeout" time="1.000000" steps="176262"/></proof>
  <proof prover="3"><result status="timeout" time="1.000000"/></proof>
  <proof prover="5"><result status="timeout" time="1.000000" steps="13463"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.24" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.121500" steps="446506"/></proof>
  <proof prover="5"><result status="valid" time="0.209402" steps="2359"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.25" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.051454" steps="99"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.26" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.079641" steps="441"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.27" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.061803" steps="172"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.28" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.061610" steps="173"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.29" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.062702" steps="183"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.30" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.062050" steps="184"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.31" expl="integer overflow">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="146452"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.000000" steps="624047"/></proof>
  <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.000000"/></proof>
  <proof prover="5" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.000000" steps="69316"/></proof>
  <transf name="inline_goal" >
   <goal name="add_justified&#39;vc.31.0" expl="integer overflow">
   <transf name="split_all_full" >
    <goal name="add_justified&#39;vc.31.0.0" expl="VC for add_justified" proved="true">
    <proof prover="5"><result status="valid" time="0.064956" steps="206"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.31.0.1" expl="VC for add_justified">
    <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.000000" steps="612466"/></proof>
    <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.000000"/></proof>
    <proof prover="5" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.000000" steps="69231"/></proof>
    <transf name="inline_goal" >
     <goal name="add_justified&#39;vc.31.0.1.0" expl="VC for add_justified">
     <proof prover="0"><result status="timeout" time="1.000000" steps="154978"/></proof>
     <proof prover="1"><result status="timeout" time="1.000000" steps="190599"/></proof>
     <proof prover="3"><result status="timeout" time="1.000000"/></proof>
     <proof prover="5"><result status="timeout" time="1.000000" steps="12487"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add_justified&#39;vc.32" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.243989" steps="2453"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.33" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.273142" steps="2502"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.34" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_justified&#39;vc.34.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.616776" steps="99988"/></proof>
   </goal>
   <goal name="add_justified&#39;vc.34.1" expl="precondition" proved="true">
   <proof prover="5"><result status="valid" time="0.115889" steps="690"/></proof>
   </goal>
   <goal name="add_justified&#39;vc.34.2" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.533072" steps="114035"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_justified&#39;vc.35" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.885744" steps="2305900"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.36" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.545517" steps="113453"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.37" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.599776" steps="6418"/></proof>
  </goal>
  <goal name="add_justified&#39;vc.38" expl="assertion">
  <transf name="inline_goal" >
   <goal name="add_justified&#39;vc.38.0" expl="assertion">
   <transf name="split_all_full" >
    <goal name="add_justified&#39;vc.38.0.0" expl="assertion" proved="true">
    <proof prover="1"><result status="valid" time="1.069523" steps="163295"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.38.0.1" expl="assertion" proved="true">
    <proof prover="1"><result status="valid" time="0.960369" steps="152703"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.38.0.2" expl="assertion" proved="true">
    <proof prover="1"><result status="valid" time="0.933280" steps="150799"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.38.0.3" expl="assertion" proved="true">
    <proof prover="1"><result status="valid" time="0.761840" steps="115745"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.38.0.4" expl="assertion" proved="true">
    <proof prover="1"><result status="valid" time="0.855036" steps="133399"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.38.0.5" expl="assertion" proved="true">
    <proof prover="1"><result status="valid" time="0.801638" steps="132309"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.38.0.6" expl="assertion" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="add_justified&#39;vc.38.0.6.0" expl="assertion" proved="true">
     <proof prover="1"><result status="valid" time="0.938769" steps="150445"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="add_justified&#39;vc.38.0.7" expl="assertion">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="148151"/></proof>
    <proof prover="1" obsolete="true"><result status="timeout" time="1.000000" steps="139117"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.000000"/></proof>
    <proof prover="5" obsolete="true"><result status="timeout" time="1.000000" steps="9504"/></proof>
    <transf name="split_vc" >
     <goal name="add_justified&#39;vc.38.0.7.0" expl="assertion">
     <proof prover="0"><result status="timeout" time="1.000000" steps="161764"/></proof>
     <proof prover="1"><result status="timeout" time="1.000000" steps="141813"/></proof>
     <proof prover="3"><result status="timeout" time="1.000000"/></proof>
     <proof prover="5"><result status="timeout" time="1.000000" steps="9247"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add_justified&#39;vc.39" expl="assertion">
  <transf name="inline_goal" >
   <goal name="add_justified&#39;vc.39.0" expl="assertion">
   <transf name="split_all_full" >
    <goal name="add_justified&#39;vc.39.0.0" expl="VC for add_justified">
    <proof prover="0"><result status="timeout" time="1.000000" steps="159156"/></proof>
    <proof prover="1"><result status="timeout" time="1.000000" steps="132242"/></proof>
    <proof prover="3"><result status="timeout" time="1.000000"/></proof>
    <proof prover="5"><result status="timeout" time="1.000000" steps="9765"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.39.0.1" expl="VC for add_justified">
    <proof prover="0"><result status="timeout" time="1.000000" steps="164704"/></proof>
    <proof prover="1"><result status="timeout" time="1.000000" steps="169531"/></proof>
    <proof prover="3"><result status="timeout" time="1.000000"/></proof>
    <proof prover="5"><result status="timeout" time="1.000000" steps="9410"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.39.0.2" expl="VC for add_justified">
    <transf name="split_vc" >
     <goal name="add_justified&#39;vc.39.0.2.0" expl="VC for add_justified">
     <proof prover="0"><result status="timeout" time="1.000000" steps="166516"/></proof>
     <proof prover="1"><result status="timeout" time="1.000000" steps="182075"/></proof>
     <proof prover="3"><result status="timeout" time="1.000000"/></proof>
     <proof prover="5"><result status="timeout" time="1.000000" steps="13486"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add_justified&#39;vc.40" expl="postcondition">
  <transf name="inline_goal" >
   <goal name="add_justified&#39;vc.40.0" expl="postcondition">
   <transf name="split_all_full" >
    <goal name="add_justified&#39;vc.40.0.0" expl="VC for add_justified" proved="true">
    <proof prover="5"><result status="valid" time="0.083851" steps="233"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.40.0.1" expl="VC for add_justified" proved="true">
    <proof prover="5"><result status="valid" time="0.166635" steps="804"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.40.0.2" expl="VC for add_justified" proved="true">
    <proof prover="5"><result status="valid" time="0.115162" steps="247"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.40.0.3" expl="VC for add_justified" proved="true">
    <proof prover="5"><result status="valid" time="0.164815" steps="811"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.40.0.4" expl="VC for add_justified" proved="true">
    <proof prover="5"><result status="valid" time="0.174045" steps="844"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.40.0.5" expl="VC for add_justified" proved="true">
    <proof prover="5"><result status="valid" time="0.557417" steps="5157"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.40.0.6" expl="VC for add_justified" proved="true">
    <proof prover="1"><result status="valid" time="0.556590" steps="90844"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.40.0.7" expl="VC for add_justified" proved="true">
    <proof prover="1"><result status="valid" time="0.524391" steps="90981"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.40.0.8" expl="VC for add_justified" proved="true">
    <proof prover="1"><result status="valid" time="0.468644" steps="87299"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.40.0.9" expl="VC for add_justified" proved="true">
    <proof prover="5"><result status="valid" time="0.101641" steps="233"/></proof>
    </goal>
    <goal name="add_justified&#39;vc.40.0.10" expl="VC for add_justified">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="142956"/></proof>
    <proof prover="1" obsolete="true"><result status="timeout" time="1.000000" steps="125631"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.000000"/></proof>
    <proof prover="5" obsolete="true"><result status="timeout" time="1.000000" steps="10785"/></proof>
    <transf name="split_vc" >
     <goal name="add_justified&#39;vc.40.0.10.0" expl="VC for add_justified">
     <proof prover="0"><result status="timeout" time="1.000000" steps="156642"/></proof>
     <proof prover="1"><result status="timeout" time="1.000000" steps="145315"/></proof>
     <proof prover="3"><result status="timeout" time="1.000000"/></proof>
     <proof prover="5"><result status="timeout" time="1.000000" steps="9456"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add_justified&#39;vc.41" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.166005" steps="874"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl14_Eq" proved="true">
 <goal name="eq&#39;vc" expl="VC for eq" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="eq&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="eq&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="eq&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="eq&#39;vc.0.0.0.0" expl="postcondition" proved="true">
     <transf name="inline_goal" proved="true" >
      <goal name="eq&#39;vc.0.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_all_full" proved="true" >
       <goal name="eq&#39;vc.0.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="5"><result status="valid" time="0.012513" steps="22"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
     <goal name="eq&#39;vc.0.0.0.1" expl="postcondition" proved="true">
     <proof prover="5"><result status="valid" time="0.012569" steps="28"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="eq&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.012278" steps="34"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="eq&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.013477" steps="44"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="eq&#39;vc.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="eq&#39;vc.1.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.011227" steps="51"/></proof>
   </goal>
   <goal name="eq&#39;vc.1.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="eq&#39;vc.1.1.0" expl="postcondition" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="eq&#39;vc.1.1.0.0" expl="postcondition" proved="true">
     <proof prover="5"><result status="valid" time="0.015595" steps="20"/></proof>
     </goal>
     <goal name="eq&#39;vc.1.1.0.1" expl="postcondition" proved="true">
     <proof prover="5"><result status="valid" time="0.011391" steps="26"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="eq&#39;vc.1.1.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.013815" steps="52"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl24_Eq" proved="true">
 <goal name="eq&#39;vc" expl="VC for eq" proved="true">
 <proof prover="5"><result status="valid" time="0.010978" steps="53"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl27_Clone" proved="true">
 <goal name="clone&#39;&#39;vc" expl="VC for clone&#39;" proved="true">
 <proof prover="5"><result status="valid" time="0.005283" steps="14"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl4_Cmp" proved="true">
 <goal name="cmp&#39;vc" expl="VC for cmp" proved="true">
 <proof prover="5"><result status="valid" time="0.032419" steps="595"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl3_PartialCmp" proved="true">
 <goal name="partial_cmp&#39;vc" expl="VC for partial_cmp" proved="true">
 <proof prover="5"><result status="valid" time="0.006588" steps="6"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl9_Len" proved="true">
 <goal name="len&#39;vc" expl="VC for len" proved="true">
 <proof prover="5"><result status="valid" time="0.015750" steps="33"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl9_LemmaAbsJust_Impl" proved="true">
 <goal name="lemma_abs_just&#39;vc" expl="VC for lemma_abs_just" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="lemma_abs_just&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020889" steps="26"/></proof>
  </goal>
  <goal name="lemma_abs_just&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.021848" steps="28"/></proof>
  </goal>
  <goal name="lemma_abs_just&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.021986" steps="84"/></proof>
  </goal>
  <goal name="lemma_abs_just&#39;vc.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.011381" steps="12956"/></proof>
  </goal>
  <goal name="lemma_abs_just&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.822150" steps="134229"/></proof>
  </goal>
  <goal name="lemma_abs_just&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.045948" steps="486"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl12_Level" proved="true">
 <goal name="level&#39;vc" expl="VC for level" proved="true">
 <proof prover="5"><result status="valid" time="0.006837" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl12_IsJustified" proved="true">
 <goal name="is_justified&#39;vc" expl="VC for is_justified" proved="true">
 <proof prover="5"><result status="valid" time="0.011187" steps="47"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl12_IsInput" proved="true">
 <goal name="is_input&#39;vc" expl="VC for is_input" proved="true">
 <proof prover="5"><result status="valid" time="0.012724" steps="77"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl12_Value" proved="true">
 <goal name="value&#39;vc" expl="VC for value" proved="true">
 <proof prover="5"><result status="valid" time="0.008111" steps="10"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl12_Term" proved="true">
 <goal name="term&#39;vc" expl="VC for term" proved="true">
 <proof prover="5"><result status="valid" time="0.007551" steps="10"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Concrete_Impl3" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.007920" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Concrete_Impl8" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004723" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl14" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.009340" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl19" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.007313" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl24" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.007062" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl13" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005661" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl21" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.006736" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl27" proved="true">
 <goal name="eq_refn" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="eq_refn.0" proved="true">
  <proof prover="5"><result status="valid" time="0.006748" steps="10"/></proof>
  </goal>
  <goal name="eq_refn.1" proved="true">
  <proof prover="5"><result status="valid" time="0.006888" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Concrete_Impl5" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004340" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Concrete_Impl10" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004960" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl16" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004399" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl21" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.006363" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl26" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004352" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl15" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005344" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl23" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <transf name="split_vc" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl29" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004326" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Concrete_Impl7" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.007259" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Concrete_Impl12" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004892" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl23" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.009759" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl12" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004952" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl20" proved="true">
 <goal name="fmt_refn" proved="true">
 <transf name="split_vc" proved="true" >
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl26" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.007619" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl13" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.010660" steps="12"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl18" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.011748" steps="12"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl27" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.006973" steps="8"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl11" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="clone&#39;_refn.0" proved="true">
  <proof prover="5"><result status="valid" time="0.005545" steps="6"/></proof>
  </goal>
  <goal name="clone&#39;_refn.1" proved="true">
  <proof prover="5"><result status="valid" time="0.004704" steps="4"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl19" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004584" steps="8"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl25" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005327" steps="8"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl0" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004571" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl2" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004348" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl3" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004701" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl3" proved="true">
 <goal name="partial_cmp_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005871" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl4" proved="true">
 <goal name="cmp_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.007370" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl5" proved="true">
 <goal name="cmp_lt_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.006186" steps="2"/></proof>
 </goal>
 <goal name="cmp_ge_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.006935" steps="2"/></proof>
 </goal>
 <goal name="cmp_gt_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005815" steps="2"/></proof>
 </goal>
 <goal name="cmp_le_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005771" steps="2"/></proof>
 </goal>
 <goal name="antisym2_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.009510" steps="8"/></proof>
 </goal>
 <goal name="trans_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.007169" steps="12"/></proof>
 </goal>
 <goal name="eq_cmp_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.007963" steps="2"/></proof>
 </goal>
 <goal name="antisym1_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.006495" steps="8"/></proof>
 </goal>
 <goal name="refl_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.006443" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl11" proved="true">
 <goal name="index_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004680" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl18" proved="true">
 <goal name="hash_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004996" steps="4"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl24" proved="true">
 <goal name="hash_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.007396" steps="6"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl30" proved="true">
 <goal name="hash_refn" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="hash_refn.0" proved="true">
  <proof prover="5"><result status="valid" time="0.007260" steps="6"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
