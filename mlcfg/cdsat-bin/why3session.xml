<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.14" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg">
<path name=".."/><path name="cdsat-bin.mlcfg"/>
<theory name="Cdsat_Impl3_Find_Impl" proved="true">
 <goal name="find&#39;vc" expl="VC for find" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="76"/></proof>
 </goal>
</theory>
<theory name="Cdsat_CountDecision_Impl" proved="true">
 <goal name="count_decision&#39;vc" expl="VC for count_decision" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="63"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Impl3_Justification_Impl">
 <goal name="justification&#39;vc" expl="VC for justification">
 <proof prover="0"><result status="timeout" time="1.00" steps="353674"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Impl3_Restrict_Impl">
 <goal name="restrict&#39;vc" expl="VC for restrict">
 <proof prover="0"><result status="timeout" time="1.00" steps="442262"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 <transf name="split_vc" >
  <goal name="restrict&#39;vc.0" expl="variant decrease">
  <proof prover="0"><result status="timeout" time="1.00" steps="328383"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="restrict&#39;vc.1" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="475013"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="restrict&#39;vc.2" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="366814"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="restrict&#39;vc.3" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="418482"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="restrict&#39;vc.4" expl="postcondition">
  <proof prover="0"><result status="timeout" time="1.00" steps="504825"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="2"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Impl3_RestrictSound_Impl">
 <goal name="restrict_sound&#39;vc" expl="VC for restrict_sound">
 <proof prover="0"><result status="timeout" time="1.00" steps="266785"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Impl3_PushDecision_Impl">
 <goal name="push_decision&#39;vc" expl="VC for push_decision">
 <proof prover="0"><result status="timeout" time="1.00" steps="336062"/></proof>
 <proof prover="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Impl4_Decide_Impl" proved="true">
 <goal name="decide&#39;vc" expl="VC for decide" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decide&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(cdsat_trail_Trail_0 (cdsat_normal_Normal_0 (Cdsat_Normal (Cdsat_Trail tgt))) = tgt)">
   <goal name="decide&#39;vc.0.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="46"/></proof>
   </goal>
   <goal name="decide&#39;vc.0.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(cdsat_trail_Trail_0 (cdsat_normal_Normal_0 (Cdsat_Normal (Cdsat_Trail self))) = self)">
    <goal name="decide&#39;vc.0.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.02" steps="50"/></proof>
    </goal>
    <goal name="decide&#39;vc.0.1.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.05" steps="207"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Impl4_Deduce_Impl" proved="true">
 <goal name="deduce&#39;vc" expl="VC for deduce" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="deduce&#39;vc.0" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(cdsat_trail_Trail_0 (cdsat_normal_Normal_0 (Cdsat_Normal (Cdsat_Trail tgt))) = tgt)">
   <goal name="deduce&#39;vc.0.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="47"/></proof>
   </goal>
   <goal name="deduce&#39;vc.0.1" expl="postcondition" proved="true">
   <transf name="assert" proved="true" arg1="(cdsat_trail_Trail_0 (cdsat_normal_Normal_0 (Cdsat_Normal (Cdsat_Trail self))) = self)">
    <goal name="deduce&#39;vc.0.1.0" expl="asserted formula" proved="true">
    <proof prover="2"><result status="valid" time="0.02" steps="51"/></proof>
    </goal>
    <goal name="deduce&#39;vc.0.1.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.05" steps="408"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="deduce&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="deduce&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Impl4_Fail_Impl" proved="true">
 <goal name="fail&#39;vc" expl="VC for fail" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fail&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="1060"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Impl4_ConflictSolve_Impl" proved="true">
 <goal name="conflict_solve&#39;vc" expl="VC for conflict_solve" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conflict_solve&#39;vc.0" expl="postcondition" proved="true">
  <transf name="unfold" proved="true" arg1="sound1">
   <goal name="conflict_solve&#39;vc.0.0" expl="VC for conflict_solve" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="conflict_solve&#39;vc.0.0.0" expl="VC for conflict_solve" proved="true">
    <transf name="assert" proved="true" arg1="(cdsat_trail_Trail_0 (cdsat_normal_Normal_0 (Cdsat_Normal (Cdsat_Trail self))) = self)
">
     <goal name="conflict_solve&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="2"><result status="valid" time="0.02" steps="49"/></proof>
     </goal>
     <goal name="conflict_solve&#39;vc.0.0.0.1" expl="VC for conflict_solve" proved="true">
     <proof prover="2"><result status="valid" time="0.12" steps="281"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="conflict_solve&#39;vc.0.0.1" expl="VC for conflict_solve" proved="true">
    <proof prover="2"><result status="valid" time="0.60" steps="11148"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Impl5_Resolve_Impl" proved="true">
 <goal name="resolve&#39;vc" expl="VC for resolve" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resolve&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="resolve&#39;vc.0.0.0" expl="postcondition" proved="true">
    <transf name="unfold" proved="true" arg1="sound">
     <goal name="resolve&#39;vc.0.0.0.0" expl="VC for resolve" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="resolve&#39;vc.0.0.0.0.0" expl="VC for resolve" proved="true">
      <proof prover="2"><result status="valid" time="0.04" steps="464"/></proof>
      </goal>
      <goal name="resolve&#39;vc.0.0.0.0.1" expl="VC for resolve" proved="true">
      <transf name="case" proved="true" arg1="(satisfy_set m (cdsat_conflict_Conflict_1 tgt))">
       <goal name="resolve&#39;vc.0.0.0.0.1.0" expl="true case" proved="true">
       <transf name="assert" proved="true" arg1="(satisfy_set m just)">
        <goal name="resolve&#39;vc.0.0.0.0.1.0.0" expl="asserted formula" proved="true">
        <proof prover="2"><result status="valid" time="0.04" steps="417"/></proof>
        </goal>
        <goal name="resolve&#39;vc.0.0.0.0.1.0.1" expl="true case" proved="true">
        <proof prover="0"><result status="valid" time="0.63" steps="147706"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="resolve&#39;vc.0.0.0.0.1.1" expl="false case" proved="true">
       <proof prover="2"><result status="valid" time="0.02" steps="46"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="resolve&#39;vc.0.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.02" steps="26"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="resolve&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="resolve&#39;vc.0.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Impl5_Backjump_Impl" proved="true">
 <goal name="backjump&#39;vc" expl="VC for backjump" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="518"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Impl5_UndoClear_Impl" proved="true">
 <goal name="undo_clear&#39;vc" expl="VC for undo_clear" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="undo_clear&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.24" steps="55346"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Impl5_UndoDecide_Impl" proved="true">
 <goal name="undo_decide&#39;vc" expl="VC for undo_decide" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="undo_decide&#39;vc.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="undo_decide&#39;vc.0.0" expl="postcondition" proved="true">
   <transf name="unfold" proved="true" arg1="sound1">
    <goal name="undo_decide&#39;vc.0.0.0" expl="VC for undo_decide" proved="true">
    <transf name="assert" proved="true" arg1="(sound2 a&#39;)">
     <goal name="undo_decide&#39;vc.0.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.25" steps="58241"/></proof>
     <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="2" obsolete="true"><result status="timeout" time="1.00"/></proof>
     </goal>
     <goal name="undo_decide&#39;vc.0.0.0.1" expl="VC for undo_decide" proved="true">
     <transf name="assert" proved="true" arg1="(sound2 (push_decision a&#39; b&#39;))">
      <goal name="undo_decide&#39;vc.0.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="(invariant&#39;1 a&#39;)">
       <goal name="undo_decide&#39;vc.0.0.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="2"><result status="valid" time="0.02" steps="80"/></proof>
       </goal>
       <goal name="undo_decide&#39;vc.0.0.0.1.0.1" expl="asserted formula" proved="true">
       <proof prover="0"><result status="valid" time="0.24" steps="58333"/></proof>
       <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
       <proof prover="2" obsolete="true"><result status="timeout" time="1.00"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="undo_decide&#39;vc.0.0.0.1.1" expl="VC for undo_decide" proved="true">
      <proof prover="2"><result status="valid" time="0.05" steps="603"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="undo_decide&#39;vc.0.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="23"/></proof>
   </goal>
   <goal name="undo_decide&#39;vc.0.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="23"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
