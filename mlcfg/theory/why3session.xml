<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="theory.mlcfg"/>
<theory name="Cdsat_Theory_Impl4_Len_Impl" proved="true">
 <goal name="len&#39;vc" expl="VC for len" proved="true">
 <proof prover="5"><result status="valid" time="0.020000" steps="10"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_Level_Impl" proved="true">
 <goal name="level&#39;vc" expl="VC for level" proved="true">
 <proof prover="5"><result status="valid" time="0.030000" steps="94"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_Find_Impl" proved="true">
 <goal name="find&#39;vc" expl="VC for find" proved="true">
 <proof prover="5"><result status="valid" time="0.100000" steps="2177"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_Contains_Impl" proved="true">
 <goal name="contains&#39;vc" expl="VC for contains" proved="true">
 <proof prover="5"><result status="valid" time="0.020000" steps="27"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_LevelOf_Impl" proved="true">
 <goal name="level_of&#39;vc" expl="VC for level_of" proved="true">
 <proof prover="5"><result status="valid" time="0.030000" steps="111"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl3_Interp_Impl" proved="true">
 <goal name="interp&#39;vc" expl="VC for interp" proved="true">
 <proof prover="5"><result status="valid" time="0.060000" steps="915"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_SetLevel_Impl" proved="true">
 <goal name="set_level&#39;vc" expl="VC for set_level" proved="true">
 <proof prover="5"><result status="valid" time="0.050000" steps="768"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl1_Negate_Impl" proved="true">
 <goal name="negate&#39;vc" expl="VC for negate" proved="true">
 <proof prover="5"><result status="valid" time="0.020000" steps="51"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_FindJustified_Impl" proved="true">
 <goal name="find_justified&#39;vc" expl="VC for find_justified" proved="true">
 <proof prover="5"><result status="valid" time="0.040000" steps="275"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_Justification_Impl" proved="true">
 <goal name="justification&#39;vc" expl="VC for justification" proved="true">
 <proof prover="5"><result status="valid" time="0.040000" steps="1255"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_CountBounds_Impl" proved="true">
 <goal name="count_bounds&#39;vc" expl="VC for count_bounds" proved="true">
 <proof prover="5"><result status="valid" time="0.040000" steps="231"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_Restrict_Impl" proved="true">
 <goal name="restrict&#39;vc" expl="VC for restrict" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="restrict&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="77"/></proof>
  </goal>
  <goal name="restrict&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="24"/></proof>
  </goal>
  <goal name="restrict&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="restrict&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="restrict&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="24"/></proof>
   </goal>
   <goal name="restrict&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.780000" steps="10010"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="restrict&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="restrict&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="restrict&#39;vc.4.0.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="29"/></proof>
    </goal>
    <goal name="restrict&#39;vc.4.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.430000" steps="5651"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="restrict&#39;vc.4.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="restrict&#39;vc.4.1.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.020000" steps="29"/></proof>
    </goal>
    <goal name="restrict&#39;vc.4.1.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.110000" steps="1451"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="restrict&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="restrict&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="restrict&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.020000" steps="27"/></proof>
    </goal>
    <goal name="restrict&#39;vc.5.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.100000" steps="1161"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="restrict&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="restrict&#39;vc.5.1.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="36"/></proof>
    </goal>
    <goal name="restrict&#39;vc.5.1.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.170000" steps="2542"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="restrict&#39;vc.5.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="restrict&#39;vc.5.2.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="27"/></proof>
    </goal>
    <goal name="restrict&#39;vc.5.2.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.180000" steps="2589"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="restrict&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="restrict&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="26"/></proof>
   </goal>
   <goal name="restrict&#39;vc.6.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.390000" steps="4988"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="restrict&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="30"/></proof>
  </goal>
  <goal name="restrict&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.030000" steps="72"/></proof>
  </goal>
  <goal name="restrict&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="restrict&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="31"/></proof>
   </goal>
   <goal name="restrict&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.565745" steps="9424"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="restrict&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="29"/></proof>
  </goal>
  <goal name="restrict&#39;vc.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="restrict&#39;vc.11.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.020000" steps="37"/></proof>
   </goal>
   <goal name="restrict&#39;vc.11.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.030000" steps="97"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_Impls_Impl" proved="true">
 <goal name="impls&#39;vc" expl="VC for impls" proved="true">
 <proof prover="5"><result status="valid" time="0.020000" steps="37"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl3_Consistent_Impl" proved="true">
 <goal name="consistent&#39;vc" expl="VC for consistent" proved="true">
 <proof prover="5"><result status="valid" time="0.011007" steps="10"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_IsInputInv_Impl" proved="true">
 <goal name="is_input_inv&#39;vc" expl="VC for is_input_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="is_input_inv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="88"/></proof>
  </goal>
  <goal name="is_input_inv&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="377"/></proof>
  </goal>
  <goal name="is_input_inv&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="is_input_inv&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="32"/></proof>
   </goal>
   <goal name="is_input_inv&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="879"/></proof>
   </goal>
   <goal name="is_input_inv&#39;vc.2.2" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.040000" steps="48"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_JustifiedIsBool_Impl" proved="true">
 <goal name="justified_is_bool&#39;vc" expl="VC for justified_is_bool" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="justified_is_bool&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="29"/></proof>
  </goal>
  <goal name="justified_is_bool&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="205"/></proof>
  </goal>
  <goal name="justified_is_bool&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.090000" steps="9417"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_JustificationContains_Impl" proved="true">
 <goal name="justification_contains&#39;vc" expl="VC for justification_contains" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="justification_contains&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="94"/></proof>
  </goal>
  <goal name="justification_contains&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="399"/></proof>
  </goal>
  <goal name="justification_contains&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="justification_contains&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="justification_contains&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="31"/></proof>
    </goal>
    <goal name="justification_contains&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.040000" steps="2369"/></proof>
    </goal>
    <goal name="justification_contains&#39;vc.2.0.2" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.120000" steps="419"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="justification_contains&#39;vc.2.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="justification_contains&#39;vc.2.1.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="38"/></proof>
    </goal>
    <goal name="justification_contains&#39;vc.2.1.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.350000" steps="5069"/></proof>
    </goal>
    <goal name="justification_contains&#39;vc.2.1.2" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.040000" steps="434"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="justification_contains&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="justification_contains&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="38"/></proof>
   </goal>
   <goal name="justification_contains&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.670000" steps="8626"/></proof>
   </goal>
   <goal name="justification_contains&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.150000" steps="1231"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl3_ResolveSound_Impl" proved="true">
 <goal name="resolve_sound&#39;vc" expl="VC for resolve_sound" proved="true">
 <proof prover="5"><result status="valid" time="0.040000" steps="307"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_Resolvef_Impl" proved="true">
 <goal name="resolvef&#39;vc" expl="VC for resolvef" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resolvef&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="28"/></proof>
  </goal>
  <goal name="resolvef&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="261"/></proof>
  </goal>
  <goal name="resolvef&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="28"/></proof>
  </goal>
  <goal name="resolvef&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="31"/></proof>
  </goal>
  <goal name="resolvef&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="296"/></proof>
  </goal>
  <goal name="resolvef&#39;vc.5" expl="postcondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="resolvef&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="resolvef&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.290000" steps="5914"/></proof>
    </goal>
    <goal name="resolvef&#39;vc.5.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="45"/></proof>
    </goal>
    <goal name="resolvef&#39;vc.5.0.2" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.020000" steps="456"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolvef&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.040000" steps="721"/></proof>
  </goal>
  <goal name="resolvef&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="5" timelimit="5" memlimit="2000"><result status="valid" time="0.190000" steps="3191"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_RestrictSound_Impl" proved="true">
 <goal name="restrict_sound&#39;vc" expl="VC for restrict_sound" proved="true">
 <proof prover="5"><result status="valid" time="0.040000" steps="241"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_TrailPlausible_Impl" proved="true">
 <goal name="trail_plausible&#39;vc" expl="VC for trail_plausible" proved="true">
 <proof prover="5"><result status="valid" time="0.259191" steps="5387"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_RestrictIdempotent_Impl" proved="true">
 <goal name="restrict_idempotent&#39;vc" expl="VC for restrict_idempotent" proved="true">
 <proof prover="5"><result status="valid" time="0.100000" steps="962"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl1_NegateInvolutive_Impl" proved="true">
 <goal name="negate_involutive&#39;vc" expl="VC for negate_involutive" proved="true">
 <proof prover="5"><result status="valid" time="0.040000" steps="261"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl3_Lemma_Impl" proved="true">
 <goal name="lemma&#39;&#39;vc" expl="VC for lemma&#39;" proved="true">
 <proof prover="5"><result status="valid" time="0.060000" steps="1446"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_LearnJustified_Impl" proved="true">
 <goal name="learn_justified&#39;vc" expl="VC for learn_justified" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="learn_justified&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.030000" steps="502"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_Backjump2_Impl" proved="true">
 <goal name="backjump2&#39;vc" expl="VC for backjump2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="backjump2&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="79"/></proof>
  </goal>
  <goal name="backjump2&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="44"/></proof>
  </goal>
  <goal name="backjump2&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="40"/></proof>
  </goal>
  <goal name="backjump2&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="66"/></proof>
  </goal>
  <goal name="backjump2&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="51"/></proof>
  </goal>
  <goal name="backjump2&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.260000" steps="40970"/></proof>
  </goal>
  <goal name="backjump2&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.190000" steps="31728"/></proof>
  </goal>
  <goal name="backjump2&#39;vc.7" expl="postcondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="backjump2&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="backjump2&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="5" timelimit="5"><result status="valid" time="0.931951" steps="18850"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_RestrictFind_Impl" proved="true">
 <goal name="restrict_find&#39;vc" expl="VC for restrict_find" proved="true">
 <proof prover="5"><result status="valid" time="0.130000" steps="2624"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_RestrictKindUnchanged_Impl" proved="true">
 <goal name="restrict_kind_unchanged&#39;vc" expl="VC for restrict_kind_unchanged" proved="true">
 <proof prover="5"><result status="valid" time="0.728782" steps="12633"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl5_Deducef_Impl" proved="true">
 <goal name="deducef&#39;vc" expl="VC for deducef" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="deducef&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.011152" steps="28"/></proof>
  </goal>
  <goal name="deducef&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.012810" steps="32"/></proof>
  </goal>
  <goal name="deducef&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.111175" steps="2157"/></proof>
  </goal>
  <goal name="deducef&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.062132" steps="1038"/></proof>
  </goal>
  <goal name="deducef&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.867170" steps="12928"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_AddJustified_Impl" proved="true">
 <goal name="add_justified&#39;vc" expl="VC for add_justified" proved="true">
 <proof prover="5"><result status="valid" time="0.391721" steps="7643"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_JustStable_Impl" proved="true">
 <goal name="just_stable&#39;vc" expl="VC for just_stable" proved="true">
 <proof prover="5"><result status="valid" time="0.016583" steps="129"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_SetLevelMax_Impl" proved="true">
 <goal name="set_level_max&#39;vc" expl="VC for set_level_max" proved="true">
 <proof prover="5"><result status="valid" time="0.040000" steps="143"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_SetLevelMin_Impl" proved="true">
 <goal name="set_level_min&#39;vc" expl="VC for set_level_min" proved="true">
 <proof prover="5"><result status="valid" time="0.120000" steps="261"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_ContainsInverse_Impl" proved="true">
 <goal name="contains_inverse&#39;vc" expl="VC for contains_inverse" proved="true">
 <proof prover="5"><result status="valid" time="0.150000" steps="2744"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_RestrictTooBig_Impl" proved="true">
 <goal name="restrict_too_big&#39;vc" expl="VC for restrict_too_big" proved="true">
 <proof prover="5"><result status="valid" time="0.140000" steps="422"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl5_Decide_Impl" proved="true">
 <goal name="decide&#39;vc" expl="VC for decide" proved="true">
 <proof prover="5"><result status="valid" time="0.140000" steps="2475"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl5_Deduce_Impl" proved="true">
 <goal name="deduce&#39;vc" expl="VC for deduce" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="deduce&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="24"/></proof>
  </goal>
  <goal name="deduce&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="32"/></proof>
  </goal>
  <goal name="deduce&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.100000" steps="2116"/></proof>
  </goal>
  <goal name="deduce&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.070000" steps="1227"/></proof>
  </goal>
  <goal name="deduce&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.719868" steps="11989"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl5_Fail_Impl" proved="true">
 <goal name="fail&#39;vc" expl="VC for fail" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fail&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="fail&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="37"/></proof>
  </goal>
  <goal name="fail&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="46"/></proof>
  </goal>
  <goal name="fail&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fail&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.200983" steps="47442"/></proof>
   </goal>
   <goal name="fail&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="36"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl5_Fail2_Impl" proved="true">
 <goal name="fail2&#39;vc" expl="VC for fail2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fail2&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="fail2&#39;vc.1" expl="postcondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="fail2&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="fail2&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="fail2&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="fail2&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="1"><result status="valid" time="0.300000" steps="48247"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="fail2&#39;vc.1.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="28"/></proof>
    </goal>
    <goal name="fail2&#39;vc.1.0.2" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(satisfy_set m just)">
     <goal name="fail2&#39;vc.1.0.2.0" expl="true case (postcondition)" proved="true">
     <proof prover="5"><result status="valid" time="0.010000" steps="30"/></proof>
     </goal>
     <goal name="fail2&#39;vc.1.0.2.1" expl="false case (postcondition)" proved="true">
     <proof prover="5"><result status="valid" time="0.010000" steps="30"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl5_ConflictSolve_Impl" proved="true">
 <goal name="conflict_solve&#39;vc" expl="VC for conflict_solve" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conflict_solve&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="conflict_solve&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="37"/></proof>
  </goal>
  <goal name="conflict_solve&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="261"/></proof>
  </goal>
  <goal name="conflict_solve&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.288154" steps="4592"/></proof>
  </goal>
  <goal name="conflict_solve&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="291"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl5_ConflictSolve2_Impl" proved="true">
 <goal name="conflict_solve2&#39;vc" expl="VC for conflict_solve2" proved="true">
 <proof prover="5"><result status="valid" time="0.030000" steps="186"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_Resolve_Impl" proved="true">
 <goal name="resolve&#39;vc" expl="VC for resolve" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resolve&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="resolve&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="254"/></proof>
  </goal>
  <goal name="resolve&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="resolve&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="29"/></proof>
  </goal>
  <goal name="resolve&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="285"/></proof>
  </goal>
  <goal name="resolve&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.270000" steps="4821"/></proof>
  </goal>
  <goal name="resolve&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.060000" steps="716"/></proof>
  </goal>
  <goal name="resolve&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.390396" steps="6700"/></proof>
   </goal>
   <goal name="resolve&#39;vc.7.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="34"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_Backjump_Impl" proved="true">
 <goal name="backjump&#39;vc" expl="VC for backjump" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="backjump&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="40"/></proof>
  </goal>
  <goal name="backjump&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="39"/></proof>
  </goal>
  <goal name="backjump&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="32"/></proof>
  </goal>
  <goal name="backjump&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="133"/></proof>
  </goal>
  <goal name="backjump&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="151"/></proof>
  </goal>
  <goal name="backjump&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.030000" steps="83"/></proof>
  </goal>
  <goal name="backjump&#39;vc.6" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="63"/></proof>
  </goal>
  <goal name="backjump&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.410000" steps="45502"/></proof>
  </goal>
  <goal name="backjump&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.170000" steps="37723"/></proof>
  </goal>
  <goal name="backjump&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="backjump&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="backjump&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="backjump&#39;vc.9.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="backjump&#39;vc.9.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="backjump&#39;vc.9.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="5" timelimit="5" memlimit="2000"><result status="valid" time="1.698190" steps="31200"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="backjump&#39;vc.9.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="63"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="backjump&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.020000" steps="49"/></proof>
   </goal>
   <goal name="backjump&#39;vc.9.2" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.020000" steps="47"/></proof>
   </goal>
   <goal name="backjump&#39;vc.9.3" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="backjump&#39;vc.9.3.0" expl="postcondition" proved="true">
    <proof prover="5" timelimit="5"><result status="valid" time="0.010000" steps="45"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_Backjump2Pre_Impl" proved="true">
 <goal name="backjump2_pre&#39;vc" expl="VC for backjump2_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="backjump2_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="49"/></proof>
  </goal>
  <goal name="backjump2_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="85"/></proof>
  </goal>
  <goal name="backjump2_pre&#39;vc.2" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(level_of (conflict_0 self) l &lt;= set_level (conflict_0 self)  (conflict_1 self))">
   <goal name="backjump2_pre&#39;vc.2.0" expl="true case (postcondition)" proved="true">
   <proof prover="5"><result status="valid" time="0.020000" steps="114"/></proof>
   </goal>
   <goal name="backjump2_pre&#39;vc.2.1" expl="false case (postcondition)" proved="true">
   <proof prover="5"><result status="valid" time="0.020000" steps="114"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_UndoClear_Impl" proved="true">
 <goal name="undo_clear&#39;vc" expl="VC for undo_clear" proved="true">
 <proof prover="5"><result status="valid" time="0.060000" steps="282"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_UndoDecide_Impl" proved="true">
 <goal name="undo_decide&#39;vc" expl="VC for undo_decide" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="undo_decide&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="28"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="250"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="28"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="31"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="35"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="151"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.6" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="54"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="1.045638" steps="20769"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.360000" steps="5879"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.995452" steps="18812"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Concrete_Impl3" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.007456" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Concrete_Impl8" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004167" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl14" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.009067" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl19" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.006802" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl24" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005359" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl13" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004149" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl21" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.007261" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl27" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.006093" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Concrete_Impl5" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004371" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Concrete_Impl10" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004517" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl16" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.010000" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl21" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.000000" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl26" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.010000" steps="6"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl15" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004475" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl23" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004415" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl29" proved="true">
 <goal name="assert_receiver_is_total_eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004258" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Concrete_Impl7" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004722" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Concrete_Impl12" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004752" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl23" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004593" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl12" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004510" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl20" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004237" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl26" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004481" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl13" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.008028" steps="12"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl18" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.006251" steps="12"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl27" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005915" steps="8"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl11" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004224" steps="6"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl19" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.007869" steps="8"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl25" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.006335" steps="8"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl0" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004258" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl2" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004273" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl3" proved="true">
 <goal name="fmt_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004073" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl3" proved="true">
 <goal name="partial_cmp_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005735" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl4" proved="true">
 <goal name="cmp_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005889" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl5" proved="true">
 <goal name="trans_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.006053" steps="12"/></proof>
 </goal>
 <goal name="eq_cmp_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005391" steps="2"/></proof>
 </goal>
 <goal name="cmp_gt_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005705" steps="2"/></proof>
 </goal>
 <goal name="cmp_ge_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005487" steps="2"/></proof>
 </goal>
 <goal name="cmp_le_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005620" steps="2"/></proof>
 </goal>
 <goal name="cmp_lt_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005560" steps="2"/></proof>
 </goal>
 <goal name="refl_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005677" steps="2"/></proof>
 </goal>
 <goal name="antisym1_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005907" steps="8"/></proof>
 </goal>
 <goal name="antisym2_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005678" steps="8"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl11" proved="true">
 <goal name="index_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004262" steps="0"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl18" proved="true">
 <goal name="hash_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.004350" steps="4"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl24" proved="true">
 <goal name="hash_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.007290" steps="6"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Term_Impl30" proved="true">
 <goal name="hash_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.005842" steps="6"/></proof>
 </goal>
</theory>
</file>
</why3session>
