<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.11.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg">
<path name=".."/><path name="theory.mlcfg"/>
<theory name="Cdsat_Theory_Impl4_Len_Impl" proved="true">
 <goal name="len&#39;vc" expl="VC for len" proved="true">
 <proof prover="5"><result status="valid" time="0.020000" steps="10"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_Level_Impl" proved="true">
 <goal name="level&#39;vc" expl="VC for level" proved="true">
 <proof prover="5"><result status="valid" time="0.030000" steps="93"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_Find_Impl" proved="true">
 <goal name="find&#39;vc" expl="VC for find" proved="true">
 <proof prover="5"><result status="valid" time="0.100000" steps="2175"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_Contains_Impl" proved="true">
 <goal name="contains&#39;vc" expl="VC for contains" proved="true">
 <proof prover="5"><result status="valid" time="0.020000" steps="27"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_LevelOf_Impl" proved="true">
 <goal name="level_of&#39;vc" expl="VC for level_of" proved="true">
 <proof prover="5"><result status="valid" time="0.030000" steps="111"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl3_Interp_Impl" proved="true">
 <goal name="interp&#39;vc" expl="VC for interp" proved="true">
 <proof prover="5"><result status="valid" time="0.060000" steps="585"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_SetLevel_Impl" proved="true">
 <goal name="set_level&#39;vc" expl="VC for set_level" proved="true">
 <proof prover="5"><result status="valid" time="0.050000" steps="763"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl1_Negate_Impl" proved="true">
 <goal name="negate&#39;vc" expl="VC for negate" proved="true">
 <proof prover="5"><result status="valid" time="0.020000" steps="51"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_FindJustified_Impl" proved="true">
 <goal name="find_justified&#39;vc" expl="VC for find_justified" proved="true">
 <proof prover="5"><result status="valid" time="0.040000" steps="272"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_Justification_Impl" proved="true">
 <goal name="justification&#39;vc" expl="VC for justification" proved="true">
 <proof prover="5"><result status="valid" time="0.040000" steps="1012"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_CountBounds_Impl" proved="true">
 <goal name="count_bounds&#39;vc" expl="VC for count_bounds" proved="true">
 <proof prover="5"><result status="valid" time="0.040000" steps="230"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_Restrict_Impl" proved="true">
 <goal name="restrict&#39;vc" expl="VC for restrict" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="restrict&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="77"/></proof>
  </goal>
  <goal name="restrict&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="24"/></proof>
  </goal>
  <goal name="restrict&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="restrict&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="restrict&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="24"/></proof>
   </goal>
   <goal name="restrict&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.780000" steps="9986"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="restrict&#39;vc.4" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="restrict&#39;vc.4.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="restrict&#39;vc.4.0.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="29"/></proof>
    </goal>
    <goal name="restrict&#39;vc.4.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.430000" steps="5639"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="restrict&#39;vc.4.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="restrict&#39;vc.4.1.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.020000" steps="29"/></proof>
    </goal>
    <goal name="restrict&#39;vc.4.1.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.110000" steps="1431"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="restrict&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="restrict&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="restrict&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.020000" steps="27"/></proof>
    </goal>
    <goal name="restrict&#39;vc.5.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.100000" steps="1164"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="restrict&#39;vc.5.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="restrict&#39;vc.5.1.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="36"/></proof>
    </goal>
    <goal name="restrict&#39;vc.5.1.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.170000" steps="2546"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="restrict&#39;vc.5.2" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="restrict&#39;vc.5.2.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="27"/></proof>
    </goal>
    <goal name="restrict&#39;vc.5.2.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.180000" steps="2589"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="restrict&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="restrict&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="26"/></proof>
   </goal>
   <goal name="restrict&#39;vc.6.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.390000" steps="4963"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="restrict&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="30"/></proof>
  </goal>
  <goal name="restrict&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.030000" steps="72"/></proof>
  </goal>
  <goal name="restrict&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="restrict&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="31"/></proof>
   </goal>
   <goal name="restrict&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.780000" steps="11197"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="restrict&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="29"/></proof>
  </goal>
  <goal name="restrict&#39;vc.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="restrict&#39;vc.11.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.020000" steps="37"/></proof>
   </goal>
   <goal name="restrict&#39;vc.11.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.030000" steps="97"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_Impls_Impl" proved="true">
 <goal name="impls&#39;vc" expl="VC for impls" proved="true">
 <proof prover="5"><result status="valid" time="0.020000" steps="37"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl5_Fail2_Impl" proved="true">
 <goal name="fail2&#39;vc" expl="VC for fail2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fail2&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="fail2&#39;vc.1" expl="postcondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="fail2&#39;vc.1.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="fail2&#39;vc.1.0.0" expl="postcondition" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="fail2&#39;vc.1.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="fail2&#39;vc.1.0.0.0.0" expl="postcondition" proved="true">
      <proof prover="1"><result status="valid" time="0.300000" steps="47174"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="fail2&#39;vc.1.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="28"/></proof>
    </goal>
    <goal name="fail2&#39;vc.1.0.2" expl="postcondition" proved="true">
    <transf name="case" proved="true" arg1="(satisfy_set m just)">
     <goal name="fail2&#39;vc.1.0.2.0" expl="true case (postcondition)" proved="true">
     <proof prover="5"><result status="valid" time="0.010000" steps="30"/></proof>
     </goal>
     <goal name="fail2&#39;vc.1.0.2.1" expl="false case (postcondition)" proved="true">
     <proof prover="5"><result status="valid" time="0.010000" steps="30"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_Backjump2Pre_Impl" proved="true">
 <goal name="backjump2_pre&#39;vc" expl="VC for backjump2_pre" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="backjump2_pre&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="49"/></proof>
  </goal>
  <goal name="backjump2_pre&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="84"/></proof>
  </goal>
  <goal name="backjump2_pre&#39;vc.2" expl="postcondition" proved="true">
  <transf name="case" proved="true" arg1="(level_of (conflict_0 self) l &lt;= set_level (conflict_0 self)  (conflict_1 self))">
   <goal name="backjump2_pre&#39;vc.2.0" expl="true case (postcondition)" proved="true">
   <proof prover="5"><result status="valid" time="0.020000" steps="113"/></proof>
   </goal>
   <goal name="backjump2_pre&#39;vc.2.1" expl="false case (postcondition)" proved="true">
   <proof prover="5"><result status="valid" time="0.020000" steps="113"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_RestrictSound_Impl" proved="true">
 <goal name="restrict_sound&#39;vc" expl="VC for restrict_sound" proved="true">
 <proof prover="5"><result status="valid" time="0.040000" steps="239"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_TrailPlausible_Impl" proved="true">
 <goal name="trail_plausible&#39;vc" expl="VC for trail_plausible" proved="true">
 <proof prover="5"><result status="valid" time="0.440000" steps="5369"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_RestrictIdempotent_Impl" proved="true">
 <goal name="restrict_idempotent&#39;vc" expl="VC for restrict_idempotent" proved="true">
 <proof prover="5"><result status="valid" time="0.100000" steps="962"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl1_NegateInvolutive_Impl" proved="true">
 <goal name="negate_involutive&#39;vc" expl="VC for negate_involutive" proved="true">
 <proof prover="5"><result status="valid" time="0.040000" steps="272"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl3_Lemma_Impl" proved="true">
 <goal name="lemma&#39;&#39;vc" expl="VC for lemma&#39;" proved="true">
 <proof prover="5"><result status="valid" time="0.060000" steps="769"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_LearnJustified_Impl" proved="true">
 <goal name="learn_justified&#39;vc" expl="VC for learn_justified" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="learn_justified&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.030000" steps="491"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_Backjump2_Impl" proved="true">
 <goal name="backjump2&#39;vc" expl="VC for backjump2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="backjump2&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="78"/></proof>
  </goal>
  <goal name="backjump2&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="43"/></proof>
  </goal>
  <goal name="backjump2&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="40"/></proof>
  </goal>
  <goal name="backjump2&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="65"/></proof>
  </goal>
  <goal name="backjump2&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="51"/></proof>
  </goal>
  <goal name="backjump2&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.260000" steps="40516"/></proof>
  </goal>
  <goal name="backjump2&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.190000" steps="31269"/></proof>
  </goal>
  <goal name="backjump2&#39;vc.7" expl="postcondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="backjump2&#39;vc.7.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="backjump2&#39;vc.7.0.0" expl="postcondition" proved="true">
    <proof prover="5" timelimit="5"><result status="valid" time="1.160000" steps="17043"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_IsInputInv_Impl" proved="true">
 <goal name="is_input_inv&#39;vc" expl="VC for is_input_inv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="is_input_inv&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="81"/></proof>
  </goal>
  <goal name="is_input_inv&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="240"/></proof>
  </goal>
  <goal name="is_input_inv&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="is_input_inv&#39;vc.2.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="39"/></proof>
   </goal>
   <goal name="is_input_inv&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="813"/></proof>
   </goal>
   <goal name="is_input_inv&#39;vc.2.2" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.040000" steps="130"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_JustifiedIsBool_Impl" proved="true">
 <goal name="justified_is_bool&#39;vc" expl="VC for justified_is_bool" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="justified_is_bool&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="28"/></proof>
  </goal>
  <goal name="justified_is_bool&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="117"/></proof>
  </goal>
  <goal name="justified_is_bool&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.090000" steps="15265"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_JustificationContains_Impl" proved="true">
 <goal name="justification_contains&#39;vc" expl="VC for justification_contains" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="justification_contains&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="86"/></proof>
  </goal>
  <goal name="justification_contains&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="249"/></proof>
  </goal>
  <goal name="justification_contains&#39;vc.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="justification_contains&#39;vc.2.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="justification_contains&#39;vc.2.0.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="52"/></proof>
    </goal>
    <goal name="justification_contains&#39;vc.2.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.040000" steps="1671"/></proof>
    </goal>
    <goal name="justification_contains&#39;vc.2.0.2" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.120000" steps="551"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="justification_contains&#39;vc.2.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="justification_contains&#39;vc.2.1.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="48"/></proof>
    </goal>
    <goal name="justification_contains&#39;vc.2.1.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.350000" steps="4770"/></proof>
    </goal>
    <goal name="justification_contains&#39;vc.2.1.2" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.040000" steps="468"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="justification_contains&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="justification_contains&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="48"/></proof>
   </goal>
   <goal name="justification_contains&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.670000" steps="8335"/></proof>
   </goal>
   <goal name="justification_contains&#39;vc.3.2" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.150000" steps="1909"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl3_ResolveSound_Impl" proved="true">
 <goal name="resolve_sound&#39;vc" expl="VC for resolve_sound" proved="true">
 <proof prover="5"><result status="valid" time="0.040000" steps="306"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_Resolvef_Impl" proved="true">
 <goal name="resolvef&#39;vc" expl="VC for resolvef" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resolvef&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="28"/></proof>
  </goal>
  <goal name="resolvef&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="28"/></proof>
  </goal>
  <goal name="resolvef&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="28"/></proof>
  </goal>
  <goal name="resolvef&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="32"/></proof>
  </goal>
  <goal name="resolvef&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="30"/></proof>
  </goal>
  <goal name="resolvef&#39;vc.5" expl="postcondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="resolvef&#39;vc.5.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="resolvef&#39;vc.5.0.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.290000" steps="4476"/></proof>
    </goal>
    <goal name="resolvef&#39;vc.5.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="44"/></proof>
    </goal>
    <goal name="resolvef&#39;vc.5.0.2" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.020000" steps="339"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="resolvef&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.040000" steps="681"/></proof>
  </goal>
  <goal name="resolvef&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="5" timelimit="5" memlimit="2000"><result status="valid" time="0.190000" steps="2574"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_Resolve_Impl" proved="true">
 <goal name="resolve&#39;vc" expl="VC for resolve" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="resolve&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="resolve&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="resolve&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="resolve&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="30"/></proof>
  </goal>
  <goal name="resolve&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="28"/></proof>
  </goal>
  <goal name="resolve&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.270000" steps="3811"/></proof>
  </goal>
  <goal name="resolve&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.060000" steps="761"/></proof>
  </goal>
  <goal name="resolve&#39;vc.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="resolve&#39;vc.7.0" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.190000" steps="2677"/></proof>
   </goal>
   <goal name="resolve&#39;vc.7.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="34"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_RestrictFind_Impl" proved="true">
 <goal name="restrict_find&#39;vc" expl="VC for restrict_find" proved="true">
 <proof prover="5"><result status="valid" time="0.130000" steps="2619"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_RestrictKindUnchanged_Impl" proved="true">
 <goal name="restrict_kind_unchanged&#39;vc" expl="VC for restrict_kind_unchanged" proved="true">
 <proof prover="5"><result status="valid" time="0.530000" steps="8621"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_SetLevelMax_Impl" proved="true">
 <goal name="set_level_max&#39;vc" expl="VC for set_level_max" proved="true">
 <proof prover="5"><result status="valid" time="0.040000" steps="143"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_SetLevelMin_Impl" proved="true">
 <goal name="set_level_min&#39;vc" expl="VC for set_level_min" proved="true">
 <proof prover="5"><result status="valid" time="0.120000" steps="257"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_ContainsInverse_Impl" proved="true">
 <goal name="contains_inverse&#39;vc" expl="VC for contains_inverse" proved="true">
 <proof prover="5"><result status="valid" time="0.150000" steps="2736"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl4_RestrictTooBig_Impl" proved="true">
 <goal name="restrict_too_big&#39;vc" expl="VC for restrict_too_big" proved="true">
 <proof prover="5"><result status="valid" time="0.140000" steps="421"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl5_Decide_Impl" proved="true">
 <goal name="decide&#39;vc" expl="VC for decide" proved="true">
 <proof prover="5"><result status="valid" time="0.140000" steps="2463"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl5_Deduce_Impl" proved="true">
 <goal name="deduce&#39;vc" expl="VC for deduce" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="deduce&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="24"/></proof>
  </goal>
  <goal name="deduce&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="32"/></proof>
  </goal>
  <goal name="deduce&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.100000" steps="2103"/></proof>
  </goal>
  <goal name="deduce&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.070000" steps="1220"/></proof>
  </goal>
  <goal name="deduce&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="1.000000" steps="14481"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl5_Fail_Impl" proved="true">
 <goal name="fail&#39;vc" expl="VC for fail" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fail&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="fail&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="37"/></proof>
  </goal>
  <goal name="fail&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="46"/></proof>
  </goal>
  <goal name="fail&#39;vc.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fail&#39;vc.3.0" expl="postcondition" proved="true">
   <proof prover="3"><result status="valid" time="0.600000" steps="1970676"/></proof>
   </goal>
   <goal name="fail&#39;vc.3.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.010000" steps="36"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl5_ConflictSolve_Impl" proved="true">
 <goal name="conflict_solve&#39;vc" expl="VC for conflict_solve" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="conflict_solve&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="26"/></proof>
  </goal>
  <goal name="conflict_solve&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="37"/></proof>
  </goal>
  <goal name="conflict_solve&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="260"/></proof>
  </goal>
  <goal name="conflict_solve&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.470000" steps="4590"/></proof>
  </goal>
  <goal name="conflict_solve&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.020000" steps="291"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl5_ConflictSolve2_Impl" proved="true">
 <goal name="conflict_solve2&#39;vc" expl="VC for conflict_solve2" proved="true">
 <proof prover="5"><result status="valid" time="0.030000" steps="186"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_Backjump_Impl" proved="true">
 <goal name="backjump&#39;vc" expl="VC for backjump" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="backjump&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="40"/></proof>
  </goal>
  <goal name="backjump&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="38"/></proof>
  </goal>
  <goal name="backjump&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="32"/></proof>
  </goal>
  <goal name="backjump&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="133"/></proof>
  </goal>
  <goal name="backjump&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="151"/></proof>
  </goal>
  <goal name="backjump&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.030000" steps="82"/></proof>
  </goal>
  <goal name="backjump&#39;vc.6" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="63"/></proof>
  </goal>
  <goal name="backjump&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.410000" steps="45043"/></proof>
  </goal>
  <goal name="backjump&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.170000" steps="36033"/></proof>
  </goal>
  <goal name="backjump&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="backjump&#39;vc.9.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="backjump&#39;vc.9.0.0" expl="postcondition" proved="true">
    <transf name="inline_goal" proved="true" >
     <goal name="backjump&#39;vc.9.0.0.0" expl="postcondition" proved="true">
     <transf name="split_all_full" proved="true" >
      <goal name="backjump&#39;vc.9.0.0.0.0" expl="postcondition" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="backjump&#39;vc.9.0.0.0.0.0" expl="postcondition" proved="true">
       <proof prover="5" timelimit="5" memlimit="2000"><result status="valid" time="2.000000" steps="32446"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="backjump&#39;vc.9.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.010000" steps="63"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="backjump&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.020000" steps="49"/></proof>
   </goal>
   <goal name="backjump&#39;vc.9.2" expl="postcondition" proved="true">
   <proof prover="5"><result status="valid" time="0.020000" steps="47"/></proof>
   </goal>
   <goal name="backjump&#39;vc.9.3" expl="postcondition" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="backjump&#39;vc.9.3.0" expl="postcondition" proved="true">
    <proof prover="5" timelimit="5"><result status="valid" time="0.010000" steps="45"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_UndoClear_Impl" proved="true">
 <goal name="undo_clear&#39;vc" expl="VC for undo_clear" proved="true">
 <proof prover="5"><result status="valid" time="0.060000" steps="282"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Theory_Impl6_UndoDecide_Impl" proved="true">
 <goal name="undo_decide&#39;vc" expl="VC for undo_decide" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="undo_decide&#39;vc.0" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="28"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="28"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="28"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.3" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="32"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.4" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="34"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="167"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.6" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.010000" steps="54"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="1.300000" steps="17025"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.360000" steps="5975"/></proof>
  </goal>
  <goal name="undo_decide&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="1.800000" steps="33718"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl15" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.000000" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl20" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.010000" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl25" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="1"><result status="valid" time="0.010000" steps="27"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl30" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.000000" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl34" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.000000" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl42" proved="true">
 <goal name="clone&#39;_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.000000" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl16" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.010000" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl21" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.000000" steps="7"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl26" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.010000" steps="6"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl31" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.000000" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl35" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.000000" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl39" proved="true">
 <goal name="eq_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.000000" steps="2"/></proof>
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl44">
 <goal name="partial_cmp_refn">
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl45">
 <goal name="cmp_refn">
 </goal>
</theory>
<theory name="Cdsat_Trail_Impl7" proved="true">
 <goal name="cmp_le_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.000000" steps="2"/></proof>
 </goal>
 <goal name="cmp_ge_log_refn" proved="true">
 <proof prover="1"><result status="valid" time="0.010000" steps="197"/></proof>
 </goal>
 <goal name="cmp_gt_log_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.000000" steps="2"/></proof>
 </goal>
 <goal name="trans_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.010000" steps="94"/></proof>
 </goal>
 <goal name="antisym2_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.000000" steps="2"/></proof>
 </goal>
 <goal name="cmp_lt_log_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.010000" steps="94"/></proof>
 </goal>
 <goal name="eq_cmp_refn" proved="true">
 <proof prover="5"><result status="valid" time="0.000000" steps="2"/></proof>
 </goal>
 <goal name="refl_refn" proved="true">
 <proof prover="1"><result status="valid" time="0.010000" steps="197"/></proof>
 </goal>
 <goal name="antisym1_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.010000" steps="94"/></proof>
 </goal>
</theory>
</file>
</why3session>
